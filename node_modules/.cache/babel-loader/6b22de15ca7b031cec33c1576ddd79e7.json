{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anubhav soni\\\\Desktop\\\\BIT WORK\\\\Web3Club\\\\newWeb3\\\\src\\\\context\\\\userState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport UserContext from \"./UserContext\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserState = props => {\n  _s();\n\n  const provider = window.ethereum != null ? new ethers.providers.Web3Provider(window.ethereum) : null;\n  const signer = provider != null ? provider.getSigner() : null;\n  const [isConnected, setIsConnected] = useState(true);\n  const [userAccount, setUserAccount] = useState(\"0xE858f0370b101cD3F58E03F18BFA1240a591b5Fa\"); // useEffect(() => {\n  //   if (signer != null) {\n  //     signer\n  //       .getAddress()\n  //       .then((res) => {\n  //         setUserAccount(res);\n  //         setIsConnected(true);\n  //       })\n  //       .catch((err) => {\n  //         setIsConnected(false);\n  //       });\n  //   } else {\n  //     setIsConnected(false);\n  //   }\n  // }, [provider, signer]);\n\n  const iswalletAvailable = window.ethereum != null;\n\n  const login = async () => {\n    await provider.send(\"eth_requestAccounts\", []).then(res => {\n      setIsConnected(true);\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(\"doing this now..\");\n\n    if (signer != null) {\n      await signer.getAddress().then(res => {\n        console.log(res);\n        setUserAccount(res);\n        setIsConnected(true);\n      }).catch(err => {\n        setIsConnected(false);\n      });\n    }\n  };\n\n  const logout = async () => {\n    await provider.send(\"eth_requestAccounts\", []).then(res => {\n      setIsConnected(false);\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(\"doing this now..\");\n\n    if (signer != null) {\n      await signer.getAddress().then(res => {\n        console.log(res);\n        setUserAccount(res);\n        setIsConnected(false);\n      }).catch(err => {\n        setIsConnected(true);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      signer,\n      provider,\n      login,\n      iswalletAvailable,\n      isConnected,\n      userAccount\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserState, \"l4FLz1B54R+mExbjqozDZo1p1N8=\");\n\n_c = UserState;\nexport default UserState;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserState\");","map":{"version":3,"names":["React","useState","useEffect","UserContext","ethers","UserState","props","provider","window","ethereum","providers","Web3Provider","signer","getSigner","isConnected","setIsConnected","userAccount","setUserAccount","iswalletAvailable","login","send","then","res","console","log","catch","err","getAddress","logout","children"],"sources":["C:/Users/Anubhav soni/Desktop/BIT WORK/Web3Club/newWeb3/src/context/userState.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport UserContext from \"./UserContext\";\r\n\r\nimport { ethers } from \"ethers\";\r\n\r\nconst UserState = (props) => {\r\n  const provider =\r\n    window.ethereum != null\r\n      ? new ethers.providers.Web3Provider(window.ethereum)\r\n      : null;\r\n  const signer = provider != null ? provider.getSigner() : null;\r\n\r\n  const [isConnected, setIsConnected] = useState(true);\r\n  const [userAccount, setUserAccount] = useState(\r\n    \"0xE858f0370b101cD3F58E03F18BFA1240a591b5Fa\"\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   if (signer != null) {\r\n  //     signer\r\n  //       .getAddress()\r\n  //       .then((res) => {\r\n  //         setUserAccount(res);\r\n  //         setIsConnected(true);\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         setIsConnected(false);\r\n  //       });\r\n  //   } else {\r\n  //     setIsConnected(false);\r\n  //   }\r\n  // }, [provider, signer]);\r\n\r\n  const iswalletAvailable = window.ethereum != null;\r\n\r\n  const login = async () => {\r\n    await provider\r\n      .send(\"eth_requestAccounts\", [])\r\n      .then((res) => {\r\n        setIsConnected(true);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    console.log(\"doing this now..\");\r\n\r\n    if (signer != null) {\r\n      await signer\r\n        .getAddress()\r\n        .then((res) => {\r\n          console.log(res);\r\n          setUserAccount(res);\r\n          setIsConnected(true);\r\n        })\r\n        .catch((err) => {\r\n          setIsConnected(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    await provider\r\n      .send(\"eth_requestAccounts\", [])\r\n      .then((res) => {\r\n        setIsConnected(false);\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    console.log(\"doing this now..\");\r\n\r\n    if (signer != null) {\r\n      await signer\r\n        .getAddress()\r\n        .then((res) => {\r\n          console.log(res);\r\n          setUserAccount(res);\r\n          setIsConnected(false);\r\n        })\r\n        .catch((err) => {\r\n          setIsConnected(true);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        signer,\r\n        provider,\r\n        login,\r\n        iswalletAvailable,\r\n        isConnected,\r\n        userAccount,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserState;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAAA;;EAC3B,MAAMC,QAAQ,GACZC,MAAM,CAACC,QAAP,IAAmB,IAAnB,GACI,IAAIL,MAAM,CAACM,SAAP,CAAiBC,YAArB,CAAkCH,MAAM,CAACC,QAAzC,CADJ,GAEI,IAHN;EAIA,MAAMG,MAAM,GAAGL,QAAQ,IAAI,IAAZ,GAAmBA,QAAQ,CAACM,SAAT,EAAnB,GAA0C,IAAzD;EAEA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,IAAD,CAA9C;EACA,MAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAC5C,4CAD4C,CAA9C,CAR2B,CAY3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMiB,iBAAiB,GAAGV,MAAM,CAACC,QAAP,IAAmB,IAA7C;;EAEA,MAAMU,KAAK,GAAG,YAAY;IACxB,MAAMZ,QAAQ,CACXa,IADG,CACE,qBADF,EACyB,EADzB,EAEHC,IAFG,CAEGC,GAAD,IAAS;MACbP,cAAc,CAAC,IAAD,CAAd;MACAQ,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CALG,EAMHG,KANG,CAMIC,GAAD,IAAS;MACdH,OAAO,CAACC,GAAR,CAAYE,GAAZ;IACD,CARG,CAAN;IAUAH,OAAO,CAACC,GAAR,CAAY,kBAAZ;;IAEA,IAAIZ,MAAM,IAAI,IAAd,EAAoB;MAClB,MAAMA,MAAM,CACTe,UADG,GAEHN,IAFG,CAEGC,GAAD,IAAS;QACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ;QACAL,cAAc,CAACK,GAAD,CAAd;QACAP,cAAc,CAAC,IAAD,CAAd;MACD,CANG,EAOHU,KAPG,CAOIC,GAAD,IAAS;QACdX,cAAc,CAAC,KAAD,CAAd;MACD,CATG,CAAN;IAUD;EACF,CAzBD;;EA2BA,MAAMa,MAAM,GAAG,YAAY;IACzB,MAAMrB,QAAQ,CACXa,IADG,CACE,qBADF,EACyB,EADzB,EAEHC,IAFG,CAEGC,GAAD,IAAS;MACbP,cAAc,CAAC,KAAD,CAAd;MACAQ,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CALG,EAMHG,KANG,CAMIC,GAAD,IAAS;MACdH,OAAO,CAACC,GAAR,CAAYE,GAAZ;IACD,CARG,CAAN;IAUAH,OAAO,CAACC,GAAR,CAAY,kBAAZ;;IAEA,IAAIZ,MAAM,IAAI,IAAd,EAAoB;MAClB,MAAMA,MAAM,CACTe,UADG,GAEHN,IAFG,CAEGC,GAAD,IAAS;QACbC,OAAO,CAACC,GAAR,CAAYF,GAAZ;QACAL,cAAc,CAACK,GAAD,CAAd;QACAP,cAAc,CAAC,KAAD,CAAd;MACD,CANG,EAOHU,KAPG,CAOIC,GAAD,IAAS;QACdX,cAAc,CAAC,IAAD,CAAd;MACD,CATG,CAAN;IAUD;EACF,CAzBD;;EA0BA,oBACE,QAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLH,MADK;MAELL,QAFK;MAGLY,KAHK;MAILD,iBAJK;MAKLJ,WALK;MAMLE;IANK,CADT;IAAA,UAUGV,KAAK,CAACuB;EAVT;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CAjGD;;GAAMxB,S;;KAAAA,S;AAmGN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}