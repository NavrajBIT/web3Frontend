{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_userName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_userDescription",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_profilepic",
          "type": "string"
        }
      ],
      "name": "addUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToUser",
      "outputs": [
        {
          "internalType": "string",
          "name": "username",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "userDescription",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "userprofilepic",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "blockOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blockedOwnerCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "blockedOwnerToOwnerId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerToOwnerId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/web3clubcontracts/contracts/login.sol"
  },
  "ast": {
    "absolutePath": "contracts/web3clubcontracts/contracts/login.sol",
    "exportedSymbols": {
      "BitUser": [
        369
      ]
    },
    "id": 370,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 209,
        "literals": [
          "solidity",
          "0.8",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BitUser",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 369,
        "linearizedBaseContracts": [
          369
        ],
        "name": "BitUser",
        "nameLocation": "67:7:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "BitUser.User",
            "id": 216,
            "members": [
              {
                "constant": false,
                "id": 211,
                "mutability": "mutable",
                "name": "username",
                "nameLocation": "110:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 216,
                "src": "103:15:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 210,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "103:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 213,
                "mutability": "mutable",
                "name": "userDescription",
                "nameLocation": "135:15:1",
                "nodeType": "VariableDeclaration",
                "scope": 216,
                "src": "128:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 212,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "128:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 215,
                "mutability": "mutable",
                "name": "userprofilepic",
                "nameLocation": "167:14:1",
                "nodeType": "VariableDeclaration",
                "scope": 216,
                "src": "160:21:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 214,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "160:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nameLocation": "88:4:1",
            "nodeType": "StructDefinition",
            "scope": 369,
            "src": "81:107:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "edf53886",
            "id": 221,
            "mutability": "mutable",
            "name": "addressToUser",
            "nameLocation": "226:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "194:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$216_storage_$",
              "typeString": "mapping(address => struct BitUser.User)"
            },
            "typeName": {
              "id": 220,
              "keyType": {
                "id": 217,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "202:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "194:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$216_storage_$",
                "typeString": "mapping(address => struct BitUser.User)"
              },
              "valueType": {
                "id": 219,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 218,
                  "name": "User",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 216,
                  "src": "213:4:1"
                },
                "referencedDeclaration": 216,
                "src": "213:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$216_storage_ptr",
                  "typeString": "struct BitUser.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0db02622",
            "id": 223,
            "mutability": "mutable",
            "name": "ownerCount",
            "nameLocation": "261:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "246:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 222,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "246:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "128b0a5d",
            "id": 227,
            "mutability": "mutable",
            "name": "ownerToOwnerId",
            "nameLocation": "312:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "277:49:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 226,
              "keyType": {
                "id": 224,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "285:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "277:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 225,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "296:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "87d11c69",
            "id": 229,
            "mutability": "mutable",
            "name": "blockedOwnerCount",
            "nameLocation": "347:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "332:32:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 228,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "332:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4a36393d",
            "id": 233,
            "mutability": "mutable",
            "name": "blockedOwnerToOwnerId",
            "nameLocation": "405:21:1",
            "nodeType": "VariableDeclaration",
            "scope": 369,
            "src": "370:56:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 232,
              "keyType": {
                "id": 230,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "378:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "370:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 231,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "389:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 251,
              "nodeType": "Block",
              "src": "447:111:1",
              "statements": [
                {
                  "expression": {
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 236,
                      "name": "blockedOwnerCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "457:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "477:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "457:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "457:21:1"
                },
                {
                  "expression": {
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 240,
                      "name": "ownerCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "488:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "501:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "488:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "488:14:1"
                },
                {
                  "expression": {
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 244,
                        "name": "ownerToOwnerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "512:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 247,
                      "indexExpression": {
                        "expression": {
                          "id": 245,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "527:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "527:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "512:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 248,
                      "name": "ownerCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "541:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "512:39:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "512:39:1"
                }
              ]
            },
            "id": 252,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "444:2:1"
            },
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "447:0:1"
            },
            "scope": 369,
            "src": "433:125:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "585:256:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 255,
                            "name": "ownerToOwnerId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "616:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 258,
                          "indexExpression": {
                            "expression": {
                              "id": 256,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "631:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "631:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "616:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "645:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "616:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "660:36:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fcea41e877c4f84237ea6b9061acc9b3fc97555de5ba31615eb7b8cf7110239",
                          "typeString": "literal_string \"Only owner can call this function.\""
                        },
                        "value": "Only owner can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fcea41e877c4f84237ea6b9061acc9b3fc97555de5ba31615eb7b8cf7110239",
                          "typeString": "literal_string \"Only owner can call this function.\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "595:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "595:111:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "595:111:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 265,
                            "name": "blockedOwnerToOwnerId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "737:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 268,
                          "indexExpression": {
                            "expression": {
                              "id": 266,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "759:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "759:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "737:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "774:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "737:38:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206265656e20626c6f636b65642e",
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "789:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf2b28f7ae5ae779ff987b17bc56a14ac99b86147bf3d90277dc8663e759227f",
                          "typeString": "literal_string \"You have been blocked.\""
                        },
                        "value": "You have been blocked."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf2b28f7ae5ae779ff987b17bc56a14ac99b86147bf3d90277dc8663e759227f",
                          "typeString": "literal_string \"You have been blocked.\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "716:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "716:107:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "716:107:1"
                },
                {
                  "id": 274,
                  "nodeType": "PlaceholderStatement",
                  "src": "833:1:1"
                }
              ]
            },
            "id": 276,
            "name": "onlyOwner",
            "nameLocation": "573:9:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "582:2:1"
            },
            "src": "564:277:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "901:165:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 284,
                            "name": "ownerToOwnerId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "919:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 286,
                          "indexExpression": {
                            "id": 285,
                            "name": "_newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "934:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "919:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "948:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "919:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f776e657220616c72656164792061646465642e",
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "951:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3efecb25b66da66f28d57499ec6e82b374e603b2724fd1f6a51dba4164931f0a",
                          "typeString": "literal_string \"Owner already added.\""
                        },
                        "value": "Owner already added."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3efecb25b66da66f28d57499ec6e82b374e603b2724fd1f6a51dba4164931f0a",
                          "typeString": "literal_string \"Owner already added.\""
                        }
                      ],
                      "id": 283,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "911:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "911:63:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 291,
                  "nodeType": "ExpressionStatement",
                  "src": "911:63:1"
                },
                {
                  "expression": {
                    "id": 296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 292,
                      "name": "ownerCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "984:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 295,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 293,
                        "name": "ownerCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "997:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1010:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "997:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "984:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 297,
                  "nodeType": "ExpressionStatement",
                  "src": "984:27:1"
                },
                {
                  "expression": {
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 298,
                        "name": "ownerToOwnerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "1021:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 300,
                      "indexExpression": {
                        "id": 299,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "1036:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1021:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 301,
                      "name": "ownerCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "1049:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1021:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:38:1"
                }
              ]
            },
            "functionSelector": "13af4035",
            "id": 305,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 281,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 280,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 276,
                  "src": "891:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "891:9:1"
              }
            ],
            "name": "setOwner",
            "nameLocation": "856:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "873:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "865:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "864:19:1"
            },
            "returnParameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "901:0:1"
            },
            "scope": 369,
            "src": "847:219:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 332,
              "nodeType": "Block",
              "src": "1127:185:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 313,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1145:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1145:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 315,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "1159:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1145:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e6e6f7420626c6f636b20796f757273656c66",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1167:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b8d6a79bab87df0c00d8b71228b50f6863f884eb533fd01910f4e7abe0ea1b62",
                          "typeString": "literal_string \"You cannot block yourself\""
                        },
                        "value": "You cannot block yourself"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b8d6a79bab87df0c00d8b71228b50f6863f884eb533fd01910f4e7abe0ea1b62",
                          "typeString": "literal_string \"You cannot block yourself\""
                        }
                      ],
                      "id": 312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1137:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1137:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "1137:58:1"
                },
                {
                  "expression": {
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 320,
                      "name": "blockedOwnerCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "1205:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 321,
                        "name": "blockedOwnerCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "1225:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1245:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "1225:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1205:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "1205:41:1"
                },
                {
                  "expression": {
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 326,
                        "name": "blockedOwnerToOwnerId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 233,
                        "src": "1256:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 328,
                      "indexExpression": {
                        "id": 327,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 307,
                        "src": "1278:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1256:29:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 329,
                      "name": "blockedOwnerCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "1288:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1256:49:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "1256:49:1"
                }
              ]
            },
            "functionSelector": "c8daa824",
            "id": 333,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 310,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 309,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 276,
                  "src": "1117:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1117:9:1"
              }
            ],
            "name": "blockOwner",
            "nameLocation": "1081:10:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 308,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1100:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 333,
                  "src": "1092:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1092:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1091:16:1"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1127:0:1"
            },
            "scope": 369,
            "src": "1072:240:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 367,
              "nodeType": "Block",
              "src": "1496:203:1",
              "statements": [
                {
                  "expression": {
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 346,
                          "name": "addressToUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "1506:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$216_storage_$",
                            "typeString": "mapping(address => struct BitUser.User storage ref)"
                          }
                        },
                        "id": 348,
                        "indexExpression": {
                          "id": 347,
                          "name": "_userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 335,
                          "src": "1520:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1506:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$216_storage",
                          "typeString": "struct BitUser.User storage ref"
                        }
                      },
                      "id": 349,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "username",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 211,
                      "src": "1506:36:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 350,
                      "name": "_userName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 337,
                      "src": "1545:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1506:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "1506:48:1"
                },
                {
                  "expression": {
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 353,
                          "name": "addressToUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "1564:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$216_storage_$",
                            "typeString": "mapping(address => struct BitUser.User storage ref)"
                          }
                        },
                        "id": 355,
                        "indexExpression": {
                          "id": 354,
                          "name": "_userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 335,
                          "src": "1578:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1564:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$216_storage",
                          "typeString": "struct BitUser.User storage ref"
                        }
                      },
                      "id": 356,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "userDescription",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 213,
                      "src": "1564:43:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 357,
                      "name": "_userDescription",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "1610:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1564:62:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:62:1"
                },
                {
                  "expression": {
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 360,
                          "name": "addressToUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "1636:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$216_storage_$",
                            "typeString": "mapping(address => struct BitUser.User storage ref)"
                          }
                        },
                        "id": 362,
                        "indexExpression": {
                          "id": 361,
                          "name": "_userAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 335,
                          "src": "1650:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1636:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$216_storage",
                          "typeString": "struct BitUser.User storage ref"
                        }
                      },
                      "id": 363,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "userprofilepic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 215,
                      "src": "1636:42:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 364,
                      "name": "_profilepic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 341,
                      "src": "1681:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1636:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 366,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:56:1"
                }
              ]
            },
            "functionSelector": "c6361c22",
            "id": 368,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 344,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 343,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 276,
                  "src": "1486:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "1486:9:1"
              }
            ],
            "name": "addUser",
            "nameLocation": "1327:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 335,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "1352:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "1344:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1344:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 337,
                  "mutability": "mutable",
                  "name": "_userName",
                  "nameLocation": "1388:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "1374:23:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 336,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 339,
                  "mutability": "mutable",
                  "name": "_userDescription",
                  "nameLocation": "1421:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "1407:30:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 338,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1407:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 341,
                  "mutability": "mutable",
                  "name": "_profilepic",
                  "nameLocation": "1461:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 368,
                  "src": "1447:25:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 340,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1447:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1334:144:1"
            },
            "returnParameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1496:0:1"
            },
            "scope": 369,
            "src": "1318:381:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 370,
        "src": "58:1643:1",
        "usedErrors": []
      }
    ],
    "src": "33:1669:1"
  },
  "bytecode": "608060405234801561001057600080fd5b5060006003819055600180805533825260026020526040909120556109648061003a6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806387d11c691161005b57806387d11c69146100fe578063c6361c2214610107578063c8daa8241461011a578063edf538861461012d57600080fd5b80630db026221461008d578063128b0a5d146100a957806313af4035146100c95780634a36393d146100de575b600080fd5b61009660015481565b6040519081526020015b60405180910390f35b6100966100b736600461066e565b60026020526000908152604090205481565b6100dc6100d736600461066e565b61014f565b005b6100966100ec36600461066e565b60046020526000908152604090205481565b61009660035481565b6100dc610115366004610733565b61023c565b6100dc61012836600461066e565b61031f565b61014061013b36600461066e565b6103ff565b6040516100a093929190610819565b336000908152600260205260409020546101845760405162461bcd60e51b815260040161017b9061085c565b60405180910390fd5b33600090815260046020526040902054156101b15760405162461bcd60e51b815260040161017b9061089e565b6001600160a01b0381166000908152600260205260409020541561020e5760405162461bcd60e51b815260206004820152601460248201527327bbb732b91030b63932b0b23c9030b23232b21760611b604482015260640161017b565b6001805461021b916108ce565b60018190556001600160a01b03909116600090815260026020526040902055565b336000908152600260205260409020546102685760405162461bcd60e51b815260040161017b9061085c565b33600090815260046020526040902054156102955760405162461bcd60e51b815260040161017b9061089e565b6001600160a01b03841660009081526020818152604090912084516102bc928601906105b9565b506001600160a01b03841660009081526020818152604090912083516102ea926001909201918501906105b9565b506001600160a01b0384166000908152602081815260409091208251610318926002909201918401906105b9565b5050505050565b3360009081526002602052604090205461034b5760405162461bcd60e51b815260040161017b9061085c565b33600090815260046020526040902054156103785760405162461bcd60e51b815260040161017b9061089e565b6001600160a01b03811633036103d05760405162461bcd60e51b815260206004820152601960248201527f596f752063616e6e6f7420626c6f636b20796f757273656c6600000000000000604482015260640161017b565b6003546103de9060016108ce565b60038190556001600160a01b03909116600090815260046020526040902055565b60006020819052908152604090208054819061041a906108f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610446906108f4565b80156104935780601f1061046857610100808354040283529160200191610493565b820191906000526020600020905b81548152906001019060200180831161047657829003601f168201915b5050505050908060010180546104a8906108f4565b80601f01602080910402602001604051908101604052809291908181526020018280546104d4906108f4565b80156105215780601f106104f657610100808354040283529160200191610521565b820191906000526020600020905b81548152906001019060200180831161050457829003601f168201915b505050505090806002018054610536906108f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610562906108f4565b80156105af5780601f10610584576101008083540402835291602001916105af565b820191906000526020600020905b81548152906001019060200180831161059257829003601f168201915b5050505050905083565b8280546105c5906108f4565b90600052602060002090601f0160209004810192826105e7576000855561062d565b82601f1061060057805160ff191683800117855561062d565b8280016001018555821561062d579182015b8281111561062d578251825591602001919060010190610612565b5061063992915061063d565b5090565b5b80821115610639576000815560010161063e565b80356001600160a01b038116811461066957600080fd5b919050565b60006020828403121561068057600080fd5b61068982610652565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126106b757600080fd5b813567ffffffffffffffff808211156106d2576106d2610690565b604051601f8301601f19908116603f011681019082821181831017156106fa576106fa610690565b8160405283815286602085880101111561071357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561074957600080fd5b61075285610652565b9350602085013567ffffffffffffffff8082111561076f57600080fd5b61077b888389016106a6565b9450604087013591508082111561079157600080fd5b61079d888389016106a6565b935060608701359150808211156107b357600080fd5b506107c0878288016106a6565b91505092959194509250565b6000815180845260005b818110156107f2576020818501810151868301820152016107d6565b81811115610804576000602083870101525b50601f01601f19169290920160200192915050565b60608152600061082c60608301866107cc565b828103602084015261083e81866107cc565b9050828103604084015261085281856107cc565b9695505050505050565b60208082526022908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604082015261371760f11b606082015260800190565b6020808252601690820152752cb7ba903430bb32903132b2b710313637b1b5b2b21760511b604082015260600190565b600082198211156108ef57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061090857607f821691505b60208210810361092857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208ad0c4424badc02c3a3ce8e5446fd8a1d083e551fdfad0fdf644a3bd848c9fde64736f6c634300080e0033",
  "bytecodeSha1": "8bf68edbeb725d36eaba0084f664731158b293e3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "BitUser",
  "coverageMap": {
    "branches": {
      "1": {
        "BitUser.blockOwner": {
          "10": [
            1145,
            1165,
            true
          ]
        },
        "BitUser.setOwner": {
          "9": [
            919,
            949,
            true
          ]
        }
      }
    },
    "statements": {
      "1": {
        "BitUser.addUser": {
          "3": [
            1506,
            1554
          ],
          "4": [
            1564,
            1626
          ],
          "5": [
            1636,
            1692
          ]
        },
        "BitUser.blockOwner": {
          "6": [
            1137,
            1195
          ],
          "7": [
            1205,
            1246
          ],
          "8": [
            1256,
            1305
          ]
        },
        "BitUser.setOwner": {
          "0": [
            911,
            974
          ],
          "1": [
            984,
            1011
          ],
          "2": [
            1021,
            1059
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100885760003560e01c806387d11c691161005b57806387d11c69146100fe578063c6361c2214610107578063c8daa8241461011a578063edf538861461012d57600080fd5b80630db026221461008d578063128b0a5d146100a957806313af4035146100c95780634a36393d146100de575b600080fd5b61009660015481565b6040519081526020015b60405180910390f35b6100966100b736600461066e565b60026020526000908152604090205481565b6100dc6100d736600461066e565b61014f565b005b6100966100ec36600461066e565b60046020526000908152604090205481565b61009660035481565b6100dc610115366004610733565b61023c565b6100dc61012836600461066e565b61031f565b61014061013b36600461066e565b6103ff565b6040516100a093929190610819565b336000908152600260205260409020546101845760405162461bcd60e51b815260040161017b9061085c565b60405180910390fd5b33600090815260046020526040902054156101b15760405162461bcd60e51b815260040161017b9061089e565b6001600160a01b0381166000908152600260205260409020541561020e5760405162461bcd60e51b815260206004820152601460248201527327bbb732b91030b63932b0b23c9030b23232b21760611b604482015260640161017b565b6001805461021b916108ce565b60018190556001600160a01b03909116600090815260026020526040902055565b336000908152600260205260409020546102685760405162461bcd60e51b815260040161017b9061085c565b33600090815260046020526040902054156102955760405162461bcd60e51b815260040161017b9061089e565b6001600160a01b03841660009081526020818152604090912084516102bc928601906105b9565b506001600160a01b03841660009081526020818152604090912083516102ea926001909201918501906105b9565b506001600160a01b0384166000908152602081815260409091208251610318926002909201918401906105b9565b5050505050565b3360009081526002602052604090205461034b5760405162461bcd60e51b815260040161017b9061085c565b33600090815260046020526040902054156103785760405162461bcd60e51b815260040161017b9061089e565b6001600160a01b03811633036103d05760405162461bcd60e51b815260206004820152601960248201527f596f752063616e6e6f7420626c6f636b20796f757273656c6600000000000000604482015260640161017b565b6003546103de9060016108ce565b60038190556001600160a01b03909116600090815260046020526040902055565b60006020819052908152604090208054819061041a906108f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610446906108f4565b80156104935780601f1061046857610100808354040283529160200191610493565b820191906000526020600020905b81548152906001019060200180831161047657829003601f168201915b5050505050908060010180546104a8906108f4565b80601f01602080910402602001604051908101604052809291908181526020018280546104d4906108f4565b80156105215780601f106104f657610100808354040283529160200191610521565b820191906000526020600020905b81548152906001019060200180831161050457829003601f168201915b505050505090806002018054610536906108f4565b80601f0160208091040260200160405190810160405280929190818152602001828054610562906108f4565b80156105af5780601f10610584576101008083540402835291602001916105af565b820191906000526020600020905b81548152906001019060200180831161059257829003601f168201915b5050505050905083565b8280546105c5906108f4565b90600052602060002090601f0160209004810192826105e7576000855561062d565b82601f1061060057805160ff191683800117855561062d565b8280016001018555821561062d579182015b8281111561062d578251825591602001919060010190610612565b5061063992915061063d565b5090565b5b80821115610639576000815560010161063e565b80356001600160a01b038116811461066957600080fd5b919050565b60006020828403121561068057600080fd5b61068982610652565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126106b757600080fd5b813567ffffffffffffffff808211156106d2576106d2610690565b604051601f8301601f19908116603f011681019082821181831017156106fa576106fa610690565b8160405283815286602085880101111561071357600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561074957600080fd5b61075285610652565b9350602085013567ffffffffffffffff8082111561076f57600080fd5b61077b888389016106a6565b9450604087013591508082111561079157600080fd5b61079d888389016106a6565b935060608701359150808211156107b357600080fd5b506107c0878288016106a6565b91505092959194509250565b6000815180845260005b818110156107f2576020818501810151868301820152016107d6565b81811115610804576000602083870101525b50601f01601f19169290920160200192915050565b60608152600061082c60608301866107cc565b828103602084015261083e81866107cc565b9050828103604084015261085281856107cc565b9695505050505050565b60208082526022908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604082015261371760f11b606082015260800190565b6020808252601690820152752cb7ba903430bb32903132b2b710313637b1b5b2b21760511b604082015260600190565b600082198211156108ef57634e487b7160e01b600052601160045260246000fd5b500190565b600181811c9082168061090857607f821691505b60208210810361092857634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212208ad0c4424badc02c3a3ce8e5446fd8a1d083e551fdfad0fdf644a3bd848c9fde64736f6c634300080e0033",
  "deployedSourceMap": "58:1643:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;246:25;;;;;;;;;160::3;;;148:2;133:18;246:25:1;;;;;;;;277:49;;;;;;:::i;:::-;;;;;;;;;;;;;;847:219;;;;;;:::i;:::-;;:::i;:::-;;370:56;;;;;;:::i;:::-;;;;;;;;;;;;;;332:32;;;;;;1318:381;;;;;;:::i;:::-;;:::i;1072:240::-;;;;;;:::i;:::-;;:::i;194:45::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;847:219::-;631:10;645:1;616:26;;;:14;:26;;;;;;595:111;;;;-1:-1:-1;;;595:111:1;;;;;;;:::i;:::-;;;;;;;;;759:10;737:33;;;;:21;:33;;;;;;:38;716:107;;;;-1:-1:-1;;;716:107:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;919:25:1;::::1;;::::0;;;:14:::1;:25;::::0;;;;;:30;911:63:::1;;;::::0;-1:-1:-1;;;911:63:1;;4228:2:3;911:63:1::1;::::0;::::1;4210:21:3::0;4267:2;4247:18;;;4240:30;-1:-1:-1;;;4286:18:3;;;4279:50;4346:18;;911:63:1::1;4026:344:3::0;911:63:1::1;997:10;::::0;;:14:::1;::::0;::::1;:::i;:::-;984:10;:27:::0;;;-1:-1:-1;;;;;1021:25:1;;::::1;;::::0;;;:14:::1;:25;::::0;;;;:38;847:219::o;1318:381::-;631:10;645:1;616:26;;;:14;:26;;;;;;595:111;;;;-1:-1:-1;;;595:111:1;;;;;;;:::i;:::-;759:10;737:33;;;;:21;:33;;;;;;:38;716:107;;;;-1:-1:-1;;;716:107:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1506:27:1;::::1;:13;:27:::0;;;::::1;::::0;;;;;;;:48;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;;1564:27:1;::::1;:13;:27:::0;;;::::1;::::0;;;;;;;:62;;::::1;::::0;:43:::1;::::0;;::::1;::::0;:62;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;;1636:27:1;::::1;:13;:27:::0;;;::::1;::::0;;;;;;;:56;;::::1;::::0;:42:::1;::::0;;::::1;::::0;:56;::::1;::::0;::::1;:::i;:::-;;1318:381:::0;;;;:::o;1072:240::-;631:10;645:1;616:26;;;:14;:26;;;;;;595:111;;;;-1:-1:-1;;;595:111:1;;;;;;;:::i;:::-;759:10;737:33;;;;:21;:33;;;;;;:38;716:107;;;;-1:-1:-1;;;716:107:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1145:20:1;::::1;:10;:20:::0;1137:58:::1;;;::::0;-1:-1:-1;;;1137:58:1;;4807:2:3;1137:58:1::1;::::0;::::1;4789:21:3::0;4846:2;4826:18;;;4819:30;4885:27;4865:18;;;4858:55;4930:18;;1137:58:1::1;4605:349:3::0;1137:58:1::1;1225:17;::::0;:21:::1;::::0;1245:1:::1;1225:21;:::i;:::-;1205:17;:41:::0;;;-1:-1:-1;;;;;1256:29:1;;::::1;;::::0;;;:21:::1;:29;::::0;;;;:49;1072:240::o;194:45::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;196:173:3;264:20;;-1:-1:-1;;;;;313:31:3;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;:::-;515:39;374:186;-1:-1:-1;;;374:186:3:o;565:127::-;626:10;621:3;617:20;614:1;607:31;657:4;654:1;647:15;681:4;678:1;671:15;697:719;740:5;793:3;786:4;778:6;774:17;770:27;760:55;;811:1;808;801:12;760:55;847:6;834:20;873:18;910:2;906;903:10;900:36;;;916:18;;:::i;:::-;991:2;985:9;959:2;1045:13;;-1:-1:-1;;1041:22:3;;;1065:2;1037:31;1033:40;1021:53;;;1089:18;;;1109:22;;;1086:46;1083:72;;;1135:18;;:::i;:::-;1175:10;1171:2;1164:22;1210:2;1202:6;1195:18;1256:3;1249:4;1244:2;1236:6;1232:15;1228:26;1225:35;1222:55;;;1273:1;1270;1263:12;1222:55;1337:2;1330:4;1322:6;1318:17;1311:4;1303:6;1299:17;1286:54;1384:1;1377:4;1372:2;1364:6;1360:15;1356:26;1349:37;1404:6;1395:15;;;;;;697:719;;;;:::o;1421:818::-;1537:6;1545;1553;1561;1614:3;1602:9;1593:7;1589:23;1585:33;1582:53;;;1631:1;1628;1621:12;1582:53;1654:29;1673:9;1654:29;:::i;:::-;1644:39;;1734:2;1723:9;1719:18;1706:32;1757:18;1798:2;1790:6;1787:14;1784:34;;;1814:1;1811;1804:12;1784:34;1837:50;1879:7;1870:6;1859:9;1855:22;1837:50;:::i;:::-;1827:60;;1940:2;1929:9;1925:18;1912:32;1896:48;;1969:2;1959:8;1956:16;1953:36;;;1985:1;1982;1975:12;1953:36;2008:52;2052:7;2041:8;2030:9;2026:24;2008:52;:::i;:::-;1998:62;;2113:2;2102:9;2098:18;2085:32;2069:48;;2142:2;2132:8;2129:16;2126:36;;;2158:1;2155;2148:12;2126:36;;2181:52;2225:7;2214:8;2203:9;2199:24;2181:52;:::i;:::-;2171:62;;;1421:818;;;;;;;:::o;2244:472::-;2286:3;2324:5;2318:12;2351:6;2346:3;2339:19;2376:1;2386:162;2400:6;2397:1;2394:13;2386:162;;;2462:4;2518:13;;;2514:22;;2508:29;2490:11;;;2486:20;;2479:59;2415:12;2386:162;;;2566:6;2563:1;2560:13;2557:87;;;2632:1;2625:4;2616:6;2611:3;2607:16;2603:27;2596:38;2557:87;-1:-1:-1;2698:2:3;2677:15;-1:-1:-1;;2673:29:3;2664:39;;;;2705:4;2660:50;;2244:472;-1:-1:-1;;2244:472:3:o;2721:546::-;2966:2;2955:9;2948:21;2929:4;2992:45;3033:2;3022:9;3018:18;3010:6;2992:45;:::i;:::-;3085:9;3077:6;3073:22;3068:2;3057:9;3053:18;3046:50;3119:33;3145:6;3137;3119:33;:::i;:::-;3105:47;;3200:9;3192:6;3188:22;3183:2;3172:9;3168:18;3161:50;3228:33;3254:6;3246;3228:33;:::i;:::-;3220:41;2721:546;-1:-1:-1;;;;;;2721:546:3:o;3272:398::-;3474:2;3456:21;;;3513:2;3493:18;;;3486:30;3552:34;3547:2;3532:18;;3525:62;-1:-1:-1;;;3618:2:3;3603:18;;3596:32;3660:3;3645:19;;3272:398::o;3675:346::-;3877:2;3859:21;;;3916:2;3896:18;;;3889:30;-1:-1:-1;;;3950:2:3;3935:18;;3928:52;4012:2;3997:18;;3675:346::o;4375:225::-;4415:3;4446:1;4442:6;4439:1;4436:13;4433:136;;;4491:10;4486:3;4482:20;4479:1;4472:31;4526:4;4523:1;4516:15;4554:4;4551:1;4544:15;4433:136;-1:-1:-1;4585:9:3;;4375:225::o;4959:380::-;5038:1;5034:12;;;;5081;;;5102:61;;5156:4;5148:6;5144:17;5134:27;;5102:61;5209:2;5201:6;5198:14;5178:18;5175:38;5172:161;;5255:10;5250:3;5246:20;5243:1;5236:31;5290:4;5287:1;5280:15;5318:4;5315:1;5308:15;5172:161;;4959:380;;;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    58,
    1701
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x87D11C69 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x87D11C69 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xC6361C22 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0xC8DAA824 EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0xEDF53886 EQ PUSH2 0x12D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDB02622 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x128B0A5D EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0x4A36393D EQ PUSH2 0xDE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x96 PUSH2 0xB7 CALLDATASIZE PUSH1 0x4 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDC PUSH2 0xD7 CALLDATASIZE PUSH1 0x4 PUSH2 0x66E JUMP JUMPDEST PUSH2 0x14F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x96 PUSH2 0xEC CALLDATASIZE PUSH1 0x4 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x96 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x115 CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x23C JUMP JUMPDEST PUSH2 0xDC PUSH2 0x128 CALLDATASIZE PUSH1 0x4 PUSH2 0x66E JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0x140 PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x66E JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x819 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x184 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B SWAP1 PUSH2 0x85C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B SWAP1 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x27BBB732B91030B63932B0B23C9030B23232B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x17B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x21B SWAP2 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x268 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B SWAP1 PUSH2 0x85C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x295 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B SWAP1 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP5 MLOAD PUSH2 0x2BC SWAP3 DUP7 ADD SWAP1 PUSH2 0x5B9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0x2EA SWAP3 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 DUP6 ADD SWAP1 PUSH2 0x5B9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x318 SWAP3 PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 DUP5 ADD SWAP1 PUSH2 0x5B9 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x34B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B SWAP1 PUSH2 0x85C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x378 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17B SWAP1 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0x3D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E6E6F7420626C6F636B20796F757273656C6600000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x17B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x3DE SWAP1 PUSH1 0x1 PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x41A SWAP1 PUSH2 0x8F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x446 SWAP1 PUSH2 0x8F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x493 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x468 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x493 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x476 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x4A8 SWAP1 PUSH2 0x8F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D4 SWAP1 PUSH2 0x8F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x521 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x521 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x504 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x536 SWAP1 PUSH2 0x8F4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x562 SWAP1 PUSH2 0x8F4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x584 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5AF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x592 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP4 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x5C5 SWAP1 PUSH2 0x8F4 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x62D JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x600 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x62D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x62D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x62D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x612 JUMP JUMPDEST POP PUSH2 0x639 SWAP3 SWAP2 POP PUSH2 0x63D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x63E JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x669 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x689 DUP3 PUSH2 0x652 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6D2 JUMPI PUSH2 0x6D2 PUSH2 0x690 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x6FA JUMPI PUSH2 0x6FA PUSH2 0x690 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x713 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x752 DUP6 PUSH2 0x652 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77B DUP9 DUP4 DUP10 ADD PUSH2 0x6A6 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x791 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x79D DUP9 DUP4 DUP10 ADD PUSH2 0x6A6 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7C0 DUP8 DUP3 DUP9 ADD PUSH2 0x6A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x7D6 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x804 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x82C PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x7CC JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x83E DUP2 DUP7 PUSH2 0x7CC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x852 DUP2 DUP6 PUSH2 0x7CC JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x2CB7BA903430BB32903132B2B710313637B1B5B2B217 PUSH1 0x51 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x8EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x908 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x928 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xD0 0xC4 TIMESTAMP 0x4B 0xAD 0xC0 0x2C GASPRICE EXTCODECOPY 0xE8 0xE5 DIFFICULTY PUSH16 0xD8A1D083E551FDFAD0FDF644A3BD848C SWAP16 0xDE PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        58,
        1701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "6": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "DUP1",
      "path": "1"
    },
    "7": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "12": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "DUP1",
      "path": "1"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "REVERT",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "17": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "POP",
      "path": "1"
    },
    "18": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "21": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "LT",
      "path": "1"
    },
    "22": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x88"
    },
    "25": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "29": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "SHR",
      "path": "1"
    },
    "32": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "DUP1",
      "path": "1"
    },
    "33": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x87D11C69"
    },
    "38": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "GT",
      "path": "1"
    },
    "39": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "43": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "DUP1",
      "path": "1"
    },
    "44": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x87D11C69"
    },
    "49": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "EQ",
      "path": "1"
    },
    "50": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFE"
    },
    "53": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "54": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "DUP1",
      "path": "1"
    },
    "55": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC6361C22"
    },
    "60": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "EQ",
      "path": "1"
    },
    "61": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x107"
    },
    "64": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "DUP1",
      "path": "1"
    },
    "66": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC8DAA824"
    },
    "71": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "EQ",
      "path": "1"
    },
    "72": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x11A"
    },
    "75": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "76": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "DUP1",
      "path": "1"
    },
    "77": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xEDF53886"
    },
    "82": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "EQ",
      "path": "1"
    },
    "83": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12D"
    },
    "86": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "87": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "DUP1",
      "path": "1"
    },
    "90": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "REVERT",
      "path": "1"
    },
    "91": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "92": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "DUP1",
      "path": "1"
    },
    "93": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xDB02622"
    },
    "98": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "EQ",
      "path": "1"
    },
    "99": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8D"
    },
    "102": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "DUP1",
      "path": "1"
    },
    "104": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x128B0A5D"
    },
    "109": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "EQ",
      "path": "1"
    },
    "110": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA9"
    },
    "113": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "114": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "DUP1",
      "path": "1"
    },
    "115": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x13AF4035"
    },
    "120": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "EQ",
      "path": "1"
    },
    "121": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC9"
    },
    "124": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "125": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "DUP1",
      "path": "1"
    },
    "126": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4A36393D"
    },
    "131": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "EQ",
      "path": "1"
    },
    "132": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDE"
    },
    "135": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "136": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "137": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "139": {
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "DUP1",
      "path": "1"
    },
    "140": {
      "first_revert": true,
      "fn": null,
      "offset": [
        58,
        1701
      ],
      "op": "REVERT",
      "path": "1"
    },
    "141": {
      "offset": [
        246,
        271
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "142": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x96"
    },
    "145": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "147": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "148": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "DUP2",
      "path": "1"
    },
    "149": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "JUMP",
      "path": "1"
    },
    "150": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "151": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "153": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "154": {
      "op": "SWAP1"
    },
    "155": {
      "op": "DUP2"
    },
    "156": {
      "op": "MSTORE"
    },
    "157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "159": {
      "op": "ADD"
    },
    "160": {
      "offset": [
        246,
        271
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "161": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "163": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "164": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "DUP1",
      "path": "1"
    },
    "165": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "166": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "SUB",
      "path": "1"
    },
    "167": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "168": {
      "fn": null,
      "offset": [
        246,
        271
      ],
      "op": "RETURN",
      "path": "1"
    },
    "169": {
      "offset": [
        277,
        326
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "170": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x96"
    },
    "173": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB7"
    },
    "176": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "177": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "179": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66E"
    },
    "182": {
      "fn": null,
      "jump": "i",
      "offset": [
        277,
        326
      ],
      "op": "JUMP",
      "path": "1"
    },
    "183": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "184": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "186": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "188": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "189": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "191": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "192": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "DUP2",
      "path": "1"
    },
    "193": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "194": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "196": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "197": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "198": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "199": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "DUP2",
      "path": "1"
    },
    "200": {
      "fn": null,
      "offset": [
        277,
        326
      ],
      "op": "JUMP",
      "path": "1"
    },
    "201": {
      "fn": "BitUser.setOwner",
      "offset": [
        847,
        1066
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "202": {
      "fn": "BitUser.setOwner",
      "offset": [
        847,
        1066
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC"
    },
    "205": {
      "fn": "BitUser.setOwner",
      "offset": [
        847,
        1066
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD7"
    },
    "208": {
      "fn": "BitUser.setOwner",
      "offset": [
        847,
        1066
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "209": {
      "fn": "BitUser.setOwner",
      "offset": [
        847,
        1066
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "211": {
      "fn": "BitUser.setOwner",
      "offset": [
        847,
        1066
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66E"
    },
    "214": {
      "fn": "BitUser.setOwner",
      "jump": "i",
      "offset": [
        847,
        1066
      ],
      "op": "JUMP",
      "path": "1"
    },
    "215": {
      "fn": "BitUser.setOwner",
      "offset": [
        847,
        1066
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "216": {
      "fn": "BitUser.setOwner",
      "offset": [
        847,
        1066
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "219": {
      "fn": "BitUser.setOwner",
      "jump": "i",
      "offset": [
        847,
        1066
      ],
      "op": "JUMP",
      "path": "1"
    },
    "220": {
      "fn": "BitUser.setOwner",
      "offset": [
        847,
        1066
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "221": {
      "fn": "BitUser.setOwner",
      "offset": [
        847,
        1066
      ],
      "op": "STOP",
      "path": "1"
    },
    "222": {
      "offset": [
        370,
        426
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "223": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x96"
    },
    "226": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEC"
    },
    "229": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "230": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "232": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66E"
    },
    "235": {
      "fn": "BitUser.setOwner",
      "jump": "i",
      "offset": [
        370,
        426
      ],
      "op": "JUMP",
      "path": "1"
    },
    "236": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "237": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "239": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "241": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "242": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "244": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "245": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "DUP2",
      "path": "1"
    },
    "246": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "247": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "249": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "250": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "251": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "252": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "DUP2",
      "path": "1"
    },
    "253": {
      "fn": "BitUser.setOwner",
      "offset": [
        370,
        426
      ],
      "op": "JUMP",
      "path": "1"
    },
    "254": {
      "offset": [
        332,
        364
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "255": {
      "fn": "BitUser.setOwner",
      "offset": [
        332,
        364
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x96"
    },
    "258": {
      "fn": "BitUser.setOwner",
      "offset": [
        332,
        364
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "260": {
      "fn": "BitUser.setOwner",
      "offset": [
        332,
        364
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "261": {
      "fn": "BitUser.setOwner",
      "offset": [
        332,
        364
      ],
      "op": "DUP2",
      "path": "1"
    },
    "262": {
      "fn": "BitUser.setOwner",
      "offset": [
        332,
        364
      ],
      "op": "JUMP",
      "path": "1"
    },
    "263": {
      "fn": "BitUser.addUser",
      "offset": [
        1318,
        1699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "264": {
      "fn": "BitUser.addUser",
      "offset": [
        1318,
        1699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC"
    },
    "267": {
      "fn": "BitUser.addUser",
      "offset": [
        1318,
        1699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x115"
    },
    "270": {
      "fn": "BitUser.addUser",
      "offset": [
        1318,
        1699
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "271": {
      "fn": "BitUser.addUser",
      "offset": [
        1318,
        1699
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "273": {
      "fn": "BitUser.addUser",
      "offset": [
        1318,
        1699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x733"
    },
    "276": {
      "fn": "BitUser.addUser",
      "jump": "i",
      "offset": [
        1318,
        1699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "277": {
      "fn": "BitUser.addUser",
      "offset": [
        1318,
        1699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "278": {
      "fn": "BitUser.addUser",
      "offset": [
        1318,
        1699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23C"
    },
    "281": {
      "fn": "BitUser.addUser",
      "jump": "i",
      "offset": [
        1318,
        1699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "282": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1072,
        1312
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "283": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1072,
        1312
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDC"
    },
    "286": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1072,
        1312
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x128"
    },
    "289": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1072,
        1312
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "290": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1072,
        1312
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "292": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1072,
        1312
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66E"
    },
    "295": {
      "fn": "BitUser.blockOwner",
      "jump": "i",
      "offset": [
        1072,
        1312
      ],
      "op": "JUMP",
      "path": "1"
    },
    "296": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1072,
        1312
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "297": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1072,
        1312
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x31F"
    },
    "300": {
      "fn": "BitUser.blockOwner",
      "jump": "i",
      "offset": [
        1072,
        1312
      ],
      "op": "JUMP",
      "path": "1"
    },
    "301": {
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "302": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x140"
    },
    "305": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13B"
    },
    "308": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "309": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "311": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x66E"
    },
    "314": {
      "fn": "BitUser.blockOwner",
      "jump": "i",
      "offset": [
        194,
        239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "315": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "316": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FF"
    },
    "319": {
      "fn": "BitUser.blockOwner",
      "jump": "i",
      "offset": [
        194,
        239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "320": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "321": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "323": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "324": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xA0"
    },
    "327": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "328": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "329": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "330": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "331": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x819"
    },
    "334": {
      "fn": "BitUser.blockOwner",
      "jump": "i",
      "offset": [
        194,
        239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "335": {
      "fn": "BitUser.setOwner",
      "offset": [
        847,
        1066
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "336": {
      "offset": [
        631,
        641
      ],
      "op": "CALLER",
      "path": "1"
    },
    "337": {
      "offset": [
        645,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "339": {
      "offset": [
        616,
        642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "340": {
      "fn": "BitUser.setOwner",
      "offset": [
        616,
        642
      ],
      "op": "DUP2",
      "path": "1"
    },
    "341": {
      "fn": "BitUser.setOwner",
      "offset": [
        616,
        642
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "342": {
      "offset": [
        616,
        630
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "344": {
      "offset": [
        616,
        642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "346": {
      "fn": "BitUser.setOwner",
      "offset": [
        616,
        642
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "347": {
      "fn": "BitUser.setOwner",
      "offset": [
        616,
        642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "349": {
      "fn": "BitUser.setOwner",
      "offset": [
        616,
        642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "350": {
      "fn": "BitUser.setOwner",
      "offset": [
        616,
        642
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "351": {
      "fn": "BitUser.setOwner",
      "offset": [
        616,
        642
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "352": {
      "offset": [
        595,
        706
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x184"
    },
    "355": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "356": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "358": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "359": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "363": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "365": {
      "op": "SHL"
    },
    "366": {
      "offset": [
        595,
        706
      ],
      "op": "DUP2",
      "path": "1"
    },
    "367": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "368": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "370": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "ADD",
      "path": "1"
    },
    "371": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17B"
    },
    "374": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "375": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x85C"
    },
    "378": {
      "fn": "BitUser.setOwner",
      "jump": "i",
      "offset": [
        595,
        706
      ],
      "op": "JUMP",
      "path": "1"
    },
    "379": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "380": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "382": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "383": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "DUP1",
      "path": "1"
    },
    "384": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "385": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "SUB",
      "path": "1"
    },
    "386": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "387": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "388": {
      "fn": "BitUser.setOwner",
      "offset": [
        595,
        706
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "389": {
      "offset": [
        759,
        769
      ],
      "op": "CALLER",
      "path": "1"
    },
    "390": {
      "offset": [
        737,
        770
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "392": {
      "fn": "BitUser.setOwner",
      "offset": [
        737,
        770
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "393": {
      "fn": "BitUser.setOwner",
      "offset": [
        737,
        770
      ],
      "op": "DUP2",
      "path": "1"
    },
    "394": {
      "fn": "BitUser.setOwner",
      "offset": [
        737,
        770
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "395": {
      "offset": [
        737,
        758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "397": {
      "offset": [
        737,
        770
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "399": {
      "fn": "BitUser.setOwner",
      "offset": [
        737,
        770
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "400": {
      "fn": "BitUser.setOwner",
      "offset": [
        737,
        770
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "402": {
      "fn": "BitUser.setOwner",
      "offset": [
        737,
        770
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "403": {
      "fn": "BitUser.setOwner",
      "offset": [
        737,
        770
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "404": {
      "fn": "BitUser.setOwner",
      "offset": [
        737,
        770
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "405": {
      "offset": [
        737,
        775
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "406": {
      "offset": [
        716,
        823
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B1"
    },
    "409": {
      "offset": [
        716,
        823
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "410": {
      "fn": "BitUser.setOwner",
      "offset": [
        716,
        823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "412": {
      "fn": "BitUser.setOwner",
      "offset": [
        716,
        823
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "413": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "417": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "419": {
      "op": "SHL"
    },
    "420": {
      "offset": [
        716,
        823
      ],
      "op": "DUP2",
      "path": "1"
    },
    "421": {
      "fn": "BitUser.setOwner",
      "offset": [
        716,
        823
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "422": {
      "fn": "BitUser.setOwner",
      "offset": [
        716,
        823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "424": {
      "fn": "BitUser.setOwner",
      "offset": [
        716,
        823
      ],
      "op": "ADD",
      "path": "1"
    },
    "425": {
      "fn": "BitUser.setOwner",
      "offset": [
        716,
        823
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17B"
    },
    "428": {
      "fn": "BitUser.setOwner",
      "offset": [
        716,
        823
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "429": {
      "fn": "BitUser.setOwner",
      "offset": [
        716,
        823
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x89E"
    },
    "432": {
      "fn": "BitUser.setOwner",
      "jump": "i",
      "offset": [
        716,
        823
      ],
      "op": "JUMP",
      "path": "1"
    },
    "433": {
      "fn": "BitUser.setOwner",
      "offset": [
        716,
        823
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "438": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "440": {
      "op": "SHL"
    },
    "441": {
      "op": "SUB"
    },
    "442": {
      "fn": "BitUser.setOwner",
      "offset": [
        919,
        944
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 0
    },
    "443": {
      "fn": "BitUser.setOwner",
      "offset": [
        919,
        944
      ],
      "op": "AND",
      "path": "1"
    },
    "444": {
      "fn": "BitUser.setOwner",
      "offset": [
        919,
        944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "446": {
      "fn": "BitUser.setOwner",
      "offset": [
        919,
        944
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "447": {
      "fn": "BitUser.setOwner",
      "offset": [
        919,
        944
      ],
      "op": "DUP2",
      "path": "1"
    },
    "448": {
      "fn": "BitUser.setOwner",
      "offset": [
        919,
        944
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "449": {
      "fn": "BitUser.setOwner",
      "offset": [
        919,
        933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "451": {
      "fn": "BitUser.setOwner",
      "offset": [
        919,
        944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "453": {
      "fn": "BitUser.setOwner",
      "offset": [
        919,
        944
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "454": {
      "fn": "BitUser.setOwner",
      "offset": [
        919,
        944
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "456": {
      "fn": "BitUser.setOwner",
      "offset": [
        919,
        944
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "457": {
      "fn": "BitUser.setOwner",
      "offset": [
        919,
        944
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "458": {
      "fn": "BitUser.setOwner",
      "offset": [
        919,
        944
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "459": {
      "branch": 9,
      "fn": "BitUser.setOwner",
      "offset": [
        919,
        949
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "460": {
      "fn": "BitUser.setOwner",
      "offset": [
        911,
        974
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20E"
    },
    "463": {
      "branch": 9,
      "fn": "BitUser.setOwner",
      "offset": [
        911,
        974
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "464": {
      "fn": "BitUser.setOwner",
      "offset": [
        911,
        974
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "466": {
      "fn": "BitUser.setOwner",
      "offset": [
        911,
        974
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "467": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "471": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "473": {
      "op": "SHL"
    },
    "474": {
      "fn": "BitUser.setOwner",
      "offset": [
        911,
        974
      ],
      "op": "DUP2",
      "path": "1"
    },
    "475": {
      "fn": "BitUser.setOwner",
      "offset": [
        911,
        974
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "478": {
      "fn": "BitUser.setOwner",
      "offset": [
        911,
        974
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "480": {
      "fn": "BitUser.setOwner",
      "offset": [
        911,
        974
      ],
      "op": "DUP3",
      "path": "1"
    },
    "481": {
      "fn": "BitUser.setOwner",
      "offset": [
        911,
        974
      ],
      "op": "ADD",
      "path": "1"
    },
    "482": {
      "op": "MSTORE"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "485": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "487": {
      "op": "DUP3"
    },
    "488": {
      "op": "ADD"
    },
    "489": {
      "op": "MSTORE"
    },
    "490": {
      "op": "PUSH20",
      "value": "0x27BBB732B91030B63932B0B23C9030B23232B217"
    },
    "511": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "516": {
      "op": "DUP3"
    },
    "517": {
      "op": "ADD"
    },
    "518": {
      "op": "MSTORE"
    },
    "519": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "521": {
      "op": "ADD"
    },
    "522": {
      "fn": "BitUser.setOwner",
      "offset": [
        911,
        974
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17B"
    },
    "525": {
      "op": "JUMP"
    },
    "526": {
      "fn": "BitUser.setOwner",
      "offset": [
        911,
        974
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "527": {
      "fn": "BitUser.setOwner",
      "offset": [
        997,
        1007
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x1"
    },
    "529": {
      "fn": "BitUser.setOwner",
      "offset": [
        997,
        1007
      ],
      "op": "DUP1",
      "path": "1"
    },
    "530": {
      "fn": "BitUser.setOwner",
      "offset": [
        997,
        1007
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "531": {
      "fn": "BitUser.setOwner",
      "offset": [
        997,
        1011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21B"
    },
    "534": {
      "fn": "BitUser.setOwner",
      "offset": [
        997,
        1011
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "535": {
      "fn": "BitUser.setOwner",
      "offset": [
        997,
        1011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8CE"
    },
    "538": {
      "fn": "BitUser.setOwner",
      "jump": "i",
      "offset": [
        997,
        1011
      ],
      "op": "JUMP",
      "path": "1"
    },
    "539": {
      "fn": "BitUser.setOwner",
      "offset": [
        997,
        1011
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "540": {
      "fn": "BitUser.setOwner",
      "offset": [
        984,
        994
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "542": {
      "fn": "BitUser.setOwner",
      "offset": [
        984,
        1011
      ],
      "op": "DUP2",
      "path": "1"
    },
    "543": {
      "fn": "BitUser.setOwner",
      "offset": [
        984,
        1011
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "544": {
      "fn": "BitUser.setOwner",
      "offset": [
        984,
        1011
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "551": {
      "op": "SHL"
    },
    "552": {
      "op": "SUB"
    },
    "553": {
      "fn": "BitUser.setOwner",
      "offset": [
        1021,
        1046
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 2
    },
    "554": {
      "fn": "BitUser.setOwner",
      "offset": [
        1021,
        1046
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "555": {
      "fn": "BitUser.setOwner",
      "offset": [
        1021,
        1046
      ],
      "op": "AND",
      "path": "1"
    },
    "556": {
      "fn": "BitUser.setOwner",
      "offset": [
        1021,
        1046
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "558": {
      "fn": "BitUser.setOwner",
      "offset": [
        1021,
        1046
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "559": {
      "fn": "BitUser.setOwner",
      "offset": [
        1021,
        1046
      ],
      "op": "DUP2",
      "path": "1"
    },
    "560": {
      "fn": "BitUser.setOwner",
      "offset": [
        1021,
        1046
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "561": {
      "fn": "BitUser.setOwner",
      "offset": [
        1021,
        1035
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "563": {
      "fn": "BitUser.setOwner",
      "offset": [
        1021,
        1046
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "565": {
      "fn": "BitUser.setOwner",
      "offset": [
        1021,
        1046
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "566": {
      "fn": "BitUser.setOwner",
      "offset": [
        1021,
        1046
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "568": {
      "fn": "BitUser.setOwner",
      "offset": [
        1021,
        1046
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "569": {
      "fn": "BitUser.setOwner",
      "offset": [
        1021,
        1046
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "570": {
      "fn": "BitUser.setOwner",
      "offset": [
        1021,
        1059
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "571": {
      "fn": "BitUser.setOwner",
      "jump": "o",
      "offset": [
        847,
        1066
      ],
      "op": "JUMP",
      "path": "1"
    },
    "572": {
      "fn": "BitUser.addUser",
      "offset": [
        1318,
        1699
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "573": {
      "offset": [
        631,
        641
      ],
      "op": "CALLER",
      "path": "1"
    },
    "574": {
      "offset": [
        645,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "576": {
      "offset": [
        616,
        642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "577": {
      "fn": "BitUser.addUser",
      "offset": [
        616,
        642
      ],
      "op": "DUP2",
      "path": "1"
    },
    "578": {
      "fn": "BitUser.addUser",
      "offset": [
        616,
        642
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "579": {
      "offset": [
        616,
        630
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "581": {
      "offset": [
        616,
        642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "583": {
      "fn": "BitUser.addUser",
      "offset": [
        616,
        642
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "584": {
      "fn": "BitUser.addUser",
      "offset": [
        616,
        642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "586": {
      "fn": "BitUser.addUser",
      "offset": [
        616,
        642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "587": {
      "fn": "BitUser.addUser",
      "offset": [
        616,
        642
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "588": {
      "fn": "BitUser.addUser",
      "offset": [
        616,
        642
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "589": {
      "offset": [
        595,
        706
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x268"
    },
    "592": {
      "fn": "BitUser.addUser",
      "offset": [
        595,
        706
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "593": {
      "fn": "BitUser.addUser",
      "offset": [
        595,
        706
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "595": {
      "fn": "BitUser.addUser",
      "offset": [
        595,
        706
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "596": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "600": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "602": {
      "op": "SHL"
    },
    "603": {
      "offset": [
        595,
        706
      ],
      "op": "DUP2",
      "path": "1"
    },
    "604": {
      "fn": "BitUser.addUser",
      "offset": [
        595,
        706
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "605": {
      "fn": "BitUser.addUser",
      "offset": [
        595,
        706
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "607": {
      "fn": "BitUser.addUser",
      "offset": [
        595,
        706
      ],
      "op": "ADD",
      "path": "1"
    },
    "608": {
      "fn": "BitUser.addUser",
      "offset": [
        595,
        706
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17B"
    },
    "611": {
      "fn": "BitUser.addUser",
      "offset": [
        595,
        706
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "612": {
      "fn": "BitUser.addUser",
      "offset": [
        595,
        706
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x85C"
    },
    "615": {
      "fn": "BitUser.addUser",
      "jump": "i",
      "offset": [
        595,
        706
      ],
      "op": "JUMP",
      "path": "1"
    },
    "616": {
      "fn": "BitUser.addUser",
      "offset": [
        595,
        706
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "617": {
      "offset": [
        759,
        769
      ],
      "op": "CALLER",
      "path": "1"
    },
    "618": {
      "offset": [
        737,
        770
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "620": {
      "fn": "BitUser.addUser",
      "offset": [
        737,
        770
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "621": {
      "fn": "BitUser.addUser",
      "offset": [
        737,
        770
      ],
      "op": "DUP2",
      "path": "1"
    },
    "622": {
      "fn": "BitUser.addUser",
      "offset": [
        737,
        770
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "623": {
      "offset": [
        737,
        758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "625": {
      "offset": [
        737,
        770
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "627": {
      "fn": "BitUser.addUser",
      "offset": [
        737,
        770
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "628": {
      "fn": "BitUser.addUser",
      "offset": [
        737,
        770
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "630": {
      "fn": "BitUser.addUser",
      "offset": [
        737,
        770
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "631": {
      "fn": "BitUser.addUser",
      "offset": [
        737,
        770
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "632": {
      "fn": "BitUser.addUser",
      "offset": [
        737,
        770
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "633": {
      "offset": [
        737,
        775
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "634": {
      "offset": [
        716,
        823
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x295"
    },
    "637": {
      "offset": [
        716,
        823
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "638": {
      "fn": "BitUser.addUser",
      "offset": [
        716,
        823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "640": {
      "fn": "BitUser.addUser",
      "offset": [
        716,
        823
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "641": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "645": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "647": {
      "op": "SHL"
    },
    "648": {
      "offset": [
        716,
        823
      ],
      "op": "DUP2",
      "path": "1"
    },
    "649": {
      "fn": "BitUser.addUser",
      "offset": [
        716,
        823
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "650": {
      "fn": "BitUser.addUser",
      "offset": [
        716,
        823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "652": {
      "fn": "BitUser.addUser",
      "offset": [
        716,
        823
      ],
      "op": "ADD",
      "path": "1"
    },
    "653": {
      "fn": "BitUser.addUser",
      "offset": [
        716,
        823
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17B"
    },
    "656": {
      "fn": "BitUser.addUser",
      "offset": [
        716,
        823
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "657": {
      "fn": "BitUser.addUser",
      "offset": [
        716,
        823
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x89E"
    },
    "660": {
      "fn": "BitUser.addUser",
      "jump": "i",
      "offset": [
        716,
        823
      ],
      "op": "JUMP",
      "path": "1"
    },
    "661": {
      "fn": "BitUser.addUser",
      "offset": [
        716,
        823
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "668": {
      "op": "SHL"
    },
    "669": {
      "op": "SUB"
    },
    "670": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1533
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 3
    },
    "671": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1533
      ],
      "op": "AND",
      "path": "1"
    },
    "672": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1519
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "674": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "675": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "676": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "677": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "679": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "680": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1533
      ],
      "op": "DUP2",
      "path": "1"
    },
    "681": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1533
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "682": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1533
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "684": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1533
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "685": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1533
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "686": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1533
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "687": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1554
      ],
      "op": "DUP5",
      "path": "1"
    },
    "688": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1554
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "689": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2BC"
    },
    "692": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1554
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "693": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1554
      ],
      "op": "DUP7",
      "path": "1"
    },
    "694": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1554
      ],
      "op": "ADD",
      "path": "1"
    },
    "695": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1554
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "696": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B9"
    },
    "699": {
      "fn": "BitUser.addUser",
      "jump": "i",
      "offset": [
        1506,
        1554
      ],
      "op": "JUMP",
      "path": "1"
    },
    "700": {
      "fn": "BitUser.addUser",
      "offset": [
        1506,
        1554
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "701": {
      "op": "POP"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "708": {
      "op": "SHL"
    },
    "709": {
      "op": "SUB"
    },
    "710": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1591
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 4
    },
    "711": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1591
      ],
      "op": "AND",
      "path": "1"
    },
    "712": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1577
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "714": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "715": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "716": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "717": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "719": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "720": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "721": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1591
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "722": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "724": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "725": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1591
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "726": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1591
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "727": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1626
      ],
      "op": "DUP4",
      "path": "1"
    },
    "728": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1626
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "729": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1626
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EA"
    },
    "732": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1626
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "733": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1607
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "735": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1607
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "736": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1607
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "737": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1607
      ],
      "op": "ADD",
      "path": "1"
    },
    "738": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1607
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "739": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1626
      ],
      "op": "DUP6",
      "path": "1"
    },
    "740": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1626
      ],
      "op": "ADD",
      "path": "1"
    },
    "741": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1626
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "742": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1626
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B9"
    },
    "745": {
      "fn": "BitUser.addUser",
      "jump": "i",
      "offset": [
        1564,
        1626
      ],
      "op": "JUMP",
      "path": "1"
    },
    "746": {
      "fn": "BitUser.addUser",
      "offset": [
        1564,
        1626
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "747": {
      "op": "POP"
    },
    "748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "754": {
      "op": "SHL"
    },
    "755": {
      "op": "SUB"
    },
    "756": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1663
      ],
      "op": "DUP5",
      "path": "1",
      "statement": 5
    },
    "757": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1663
      ],
      "op": "AND",
      "path": "1"
    },
    "758": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1649
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "760": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1663
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "761": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1663
      ],
      "op": "DUP2",
      "path": "1"
    },
    "762": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1663
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "763": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "765": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1663
      ],
      "op": "DUP2",
      "path": "1"
    },
    "766": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1663
      ],
      "op": "DUP2",
      "path": "1"
    },
    "767": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1663
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "768": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1663
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "770": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1663
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "771": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1663
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "772": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1663
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "773": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1692
      ],
      "op": "DUP3",
      "path": "1"
    },
    "774": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1692
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "775": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1692
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x318"
    },
    "778": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1692
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "779": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1678
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "781": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1678
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "782": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1678
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "783": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1678
      ],
      "op": "ADD",
      "path": "1"
    },
    "784": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1678
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "785": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1692
      ],
      "op": "DUP5",
      "path": "1"
    },
    "786": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1692
      ],
      "op": "ADD",
      "path": "1"
    },
    "787": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1692
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "788": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1692
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5B9"
    },
    "791": {
      "fn": "BitUser.addUser",
      "jump": "i",
      "offset": [
        1636,
        1692
      ],
      "op": "JUMP",
      "path": "1"
    },
    "792": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1692
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "793": {
      "fn": "BitUser.addUser",
      "offset": [
        1636,
        1692
      ],
      "op": "POP",
      "path": "1"
    },
    "794": {
      "fn": "BitUser.addUser",
      "offset": [
        1318,
        1699
      ],
      "op": "POP",
      "path": "1"
    },
    "795": {
      "fn": "BitUser.addUser",
      "offset": [
        1318,
        1699
      ],
      "op": "POP",
      "path": "1"
    },
    "796": {
      "fn": "BitUser.addUser",
      "offset": [
        1318,
        1699
      ],
      "op": "POP",
      "path": "1"
    },
    "797": {
      "fn": "BitUser.addUser",
      "offset": [
        1318,
        1699
      ],
      "op": "POP",
      "path": "1"
    },
    "798": {
      "fn": "BitUser.addUser",
      "jump": "o",
      "offset": [
        1318,
        1699
      ],
      "op": "JUMP",
      "path": "1"
    },
    "799": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1072,
        1312
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "800": {
      "offset": [
        631,
        641
      ],
      "op": "CALLER",
      "path": "1"
    },
    "801": {
      "offset": [
        645,
        646
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "803": {
      "offset": [
        616,
        642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "804": {
      "fn": "BitUser.blockOwner",
      "offset": [
        616,
        642
      ],
      "op": "DUP2",
      "path": "1"
    },
    "805": {
      "fn": "BitUser.blockOwner",
      "offset": [
        616,
        642
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "806": {
      "offset": [
        616,
        630
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "808": {
      "offset": [
        616,
        642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "810": {
      "fn": "BitUser.blockOwner",
      "offset": [
        616,
        642
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "811": {
      "fn": "BitUser.blockOwner",
      "offset": [
        616,
        642
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "813": {
      "fn": "BitUser.blockOwner",
      "offset": [
        616,
        642
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "814": {
      "fn": "BitUser.blockOwner",
      "offset": [
        616,
        642
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "815": {
      "fn": "BitUser.blockOwner",
      "offset": [
        616,
        642
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "816": {
      "offset": [
        595,
        706
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34B"
    },
    "819": {
      "fn": "BitUser.blockOwner",
      "offset": [
        595,
        706
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "820": {
      "fn": "BitUser.blockOwner",
      "offset": [
        595,
        706
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "822": {
      "fn": "BitUser.blockOwner",
      "offset": [
        595,
        706
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "823": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "827": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "829": {
      "op": "SHL"
    },
    "830": {
      "offset": [
        595,
        706
      ],
      "op": "DUP2",
      "path": "1"
    },
    "831": {
      "fn": "BitUser.blockOwner",
      "offset": [
        595,
        706
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "832": {
      "fn": "BitUser.blockOwner",
      "offset": [
        595,
        706
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "834": {
      "fn": "BitUser.blockOwner",
      "offset": [
        595,
        706
      ],
      "op": "ADD",
      "path": "1"
    },
    "835": {
      "fn": "BitUser.blockOwner",
      "offset": [
        595,
        706
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17B"
    },
    "838": {
      "fn": "BitUser.blockOwner",
      "offset": [
        595,
        706
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "839": {
      "fn": "BitUser.blockOwner",
      "offset": [
        595,
        706
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x85C"
    },
    "842": {
      "fn": "BitUser.blockOwner",
      "jump": "i",
      "offset": [
        595,
        706
      ],
      "op": "JUMP",
      "path": "1"
    },
    "843": {
      "fn": "BitUser.blockOwner",
      "offset": [
        595,
        706
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "844": {
      "offset": [
        759,
        769
      ],
      "op": "CALLER",
      "path": "1"
    },
    "845": {
      "offset": [
        737,
        770
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "847": {
      "fn": "BitUser.blockOwner",
      "offset": [
        737,
        770
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "848": {
      "fn": "BitUser.blockOwner",
      "offset": [
        737,
        770
      ],
      "op": "DUP2",
      "path": "1"
    },
    "849": {
      "fn": "BitUser.blockOwner",
      "offset": [
        737,
        770
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "850": {
      "offset": [
        737,
        758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "852": {
      "offset": [
        737,
        770
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "854": {
      "fn": "BitUser.blockOwner",
      "offset": [
        737,
        770
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "855": {
      "fn": "BitUser.blockOwner",
      "offset": [
        737,
        770
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "857": {
      "fn": "BitUser.blockOwner",
      "offset": [
        737,
        770
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "858": {
      "fn": "BitUser.blockOwner",
      "offset": [
        737,
        770
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "859": {
      "fn": "BitUser.blockOwner",
      "offset": [
        737,
        770
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "860": {
      "offset": [
        737,
        775
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "861": {
      "offset": [
        716,
        823
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x378"
    },
    "864": {
      "offset": [
        716,
        823
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "865": {
      "fn": "BitUser.blockOwner",
      "offset": [
        716,
        823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "867": {
      "fn": "BitUser.blockOwner",
      "offset": [
        716,
        823
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "868": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "872": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "874": {
      "op": "SHL"
    },
    "875": {
      "offset": [
        716,
        823
      ],
      "op": "DUP2",
      "path": "1"
    },
    "876": {
      "fn": "BitUser.blockOwner",
      "offset": [
        716,
        823
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "877": {
      "fn": "BitUser.blockOwner",
      "offset": [
        716,
        823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "879": {
      "fn": "BitUser.blockOwner",
      "offset": [
        716,
        823
      ],
      "op": "ADD",
      "path": "1"
    },
    "880": {
      "fn": "BitUser.blockOwner",
      "offset": [
        716,
        823
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17B"
    },
    "883": {
      "fn": "BitUser.blockOwner",
      "offset": [
        716,
        823
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "884": {
      "fn": "BitUser.blockOwner",
      "offset": [
        716,
        823
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x89E"
    },
    "887": {
      "fn": "BitUser.blockOwner",
      "jump": "i",
      "offset": [
        716,
        823
      ],
      "op": "JUMP",
      "path": "1"
    },
    "888": {
      "fn": "BitUser.blockOwner",
      "offset": [
        716,
        823
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "895": {
      "op": "SHL"
    },
    "896": {
      "op": "SUB"
    },
    "897": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1145,
        1165
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 6
    },
    "898": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1145,
        1165
      ],
      "op": "AND",
      "path": "1"
    },
    "899": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1145,
        1155
      ],
      "op": "CALLER",
      "path": "1"
    },
    "900": {
      "branch": 10,
      "fn": "BitUser.blockOwner",
      "offset": [
        1145,
        1165
      ],
      "op": "SUB",
      "path": "1"
    },
    "901": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1137,
        1195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D0"
    },
    "904": {
      "branch": 10,
      "fn": "BitUser.blockOwner",
      "offset": [
        1137,
        1195
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "905": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1137,
        1195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "907": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1137,
        1195
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "908": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "912": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "914": {
      "op": "SHL"
    },
    "915": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1137,
        1195
      ],
      "op": "DUP2",
      "path": "1"
    },
    "916": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1137,
        1195
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "919": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1137,
        1195
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "921": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1137,
        1195
      ],
      "op": "DUP3",
      "path": "1"
    },
    "922": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1137,
        1195
      ],
      "op": "ADD",
      "path": "1"
    },
    "923": {
      "op": "MSTORE"
    },
    "924": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "928": {
      "op": "DUP3"
    },
    "929": {
      "op": "ADD"
    },
    "930": {
      "op": "MSTORE"
    },
    "931": {
      "op": "PUSH32",
      "value": "0x596F752063616E6E6F7420626C6F636B20796F757273656C6600000000000000"
    },
    "964": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "966": {
      "op": "DUP3"
    },
    "967": {
      "op": "ADD"
    },
    "968": {
      "op": "MSTORE"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "971": {
      "op": "ADD"
    },
    "972": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1137,
        1195
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17B"
    },
    "975": {
      "op": "JUMP"
    },
    "976": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1137,
        1195
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "977": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1225,
        1242
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 7,
      "value": "0x3"
    },
    "979": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1225,
        1242
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "980": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1225,
        1246
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE"
    },
    "983": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1225,
        1246
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "984": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1245,
        1246
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "986": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1225,
        1246
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8CE"
    },
    "989": {
      "fn": "BitUser.blockOwner",
      "jump": "i",
      "offset": [
        1225,
        1246
      ],
      "op": "JUMP",
      "path": "1"
    },
    "990": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1225,
        1246
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "991": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1205,
        1222
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "993": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1205,
        1246
      ],
      "op": "DUP2",
      "path": "1"
    },
    "994": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1205,
        1246
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "995": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1205,
        1246
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1002": {
      "op": "SHL"
    },
    "1003": {
      "op": "SUB"
    },
    "1004": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1256,
        1285
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 8
    },
    "1005": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1256,
        1285
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1006": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1256,
        1285
      ],
      "op": "AND",
      "path": "1"
    },
    "1007": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1256,
        1285
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1009": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1256,
        1285
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1010": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1256,
        1285
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1011": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1256,
        1285
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1012": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1256,
        1277
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1014": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1256,
        1285
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1016": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1256,
        1285
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1017": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1256,
        1285
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1019": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1256,
        1285
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1020": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1256,
        1285
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1021": {
      "fn": "BitUser.blockOwner",
      "offset": [
        1256,
        1305
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1022": {
      "fn": "BitUser.blockOwner",
      "jump": "o",
      "offset": [
        1072,
        1312
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1023": {
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1024": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1026": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1028": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1029": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1030": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1031": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1032": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1033": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1034": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1036": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1037": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1038": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1039": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1040": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1041": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1042": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x41A"
    },
    "1045": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1046": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "1049": {
      "fn": "BitUser.blockOwner",
      "jump": "i",
      "offset": [
        194,
        239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1050": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1051": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1052": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1054": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1055": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1057": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1058": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1059": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DIV",
      "path": "1"
    },
    "1060": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MUL",
      "path": "1"
    },
    "1061": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1063": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1064": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1066": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1067": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1068": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1069": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1070": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1072": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1073": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1074": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1075": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1076": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1077": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1078": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1079": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1080": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1082": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1083": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1084": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1085": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1086": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x446"
    },
    "1089": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1090": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "1093": {
      "fn": "BitUser.blockOwner",
      "jump": "i",
      "offset": [
        194,
        239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1094": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1095": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1096": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1097": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x493"
    },
    "1100": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1101": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1102": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1104": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "LT",
      "path": "1"
    },
    "1105": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x468"
    },
    "1108": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1109": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1112": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1113": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1114": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1115": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DIV",
      "path": "1"
    },
    "1116": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MUL",
      "path": "1"
    },
    "1117": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1118": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1119": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1120": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1122": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1123": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1124": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x493"
    },
    "1127": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1128": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1129": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1130": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1131": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1132": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1133": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1135": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1136": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1138": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1140": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1141": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1142": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1143": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1144": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1145": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1146": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1147": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1148": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1150": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1151": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1152": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1154": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1155": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1156": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1157": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "GT",
      "path": "1"
    },
    "1158": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x476"
    },
    "1161": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1162": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1163": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1164": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SUB",
      "path": "1"
    },
    "1165": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1167": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "AND",
      "path": "1"
    },
    "1168": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1169": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1170": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1171": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1172": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1173": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1174": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1175": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1176": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1177": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1178": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1179": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1181": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1182": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1183": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1184": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A8"
    },
    "1187": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1188": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "1191": {
      "fn": "BitUser.blockOwner",
      "jump": "i",
      "offset": [
        194,
        239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1192": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1193": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1194": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1196": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1197": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1199": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1200": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1201": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DIV",
      "path": "1"
    },
    "1202": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MUL",
      "path": "1"
    },
    "1203": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1205": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1206": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1208": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1209": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1210": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1211": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1212": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1214": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1215": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1216": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1217": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1218": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1219": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1220": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1221": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1222": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1224": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1225": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1226": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1227": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1228": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4D4"
    },
    "1231": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1232": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "1235": {
      "fn": "BitUser.blockOwner",
      "jump": "i",
      "offset": [
        194,
        239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1236": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1237": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1238": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1239": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x521"
    },
    "1242": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1243": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1244": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1246": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "LT",
      "path": "1"
    },
    "1247": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4F6"
    },
    "1250": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1251": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1254": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1255": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1256": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1257": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DIV",
      "path": "1"
    },
    "1258": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MUL",
      "path": "1"
    },
    "1259": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1260": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1261": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1262": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1264": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1265": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1266": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x521"
    },
    "1269": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1270": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1271": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1272": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1273": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1274": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1275": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1277": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1278": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1280": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1282": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1283": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1284": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1285": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1286": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1287": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1288": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1289": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1290": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1292": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1293": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1294": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1296": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1297": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1298": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1299": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "GT",
      "path": "1"
    },
    "1300": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x504"
    },
    "1303": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1304": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1305": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1306": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SUB",
      "path": "1"
    },
    "1307": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1309": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "AND",
      "path": "1"
    },
    "1310": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1311": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1312": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1313": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1314": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1315": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1316": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1317": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1318": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1319": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1320": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1321": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1323": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1324": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1325": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1326": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x536"
    },
    "1329": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1330": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "1333": {
      "fn": "BitUser.blockOwner",
      "jump": "i",
      "offset": [
        194,
        239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1334": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1335": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1336": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1338": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1339": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1341": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1342": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1343": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DIV",
      "path": "1"
    },
    "1344": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MUL",
      "path": "1"
    },
    "1345": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1347": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1348": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1350": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1351": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1352": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1353": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1354": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1356": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1357": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1358": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1359": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1360": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1361": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1362": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1363": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1364": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1366": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1367": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1368": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1369": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1370": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x562"
    },
    "1373": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1374": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8F4"
    },
    "1377": {
      "fn": "BitUser.blockOwner",
      "jump": "i",
      "offset": [
        194,
        239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1378": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1379": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1380": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1381": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5AF"
    },
    "1384": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1385": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1386": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1388": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "LT",
      "path": "1"
    },
    "1389": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x584"
    },
    "1392": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1393": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1396": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1397": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1398": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1399": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DIV",
      "path": "1"
    },
    "1400": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MUL",
      "path": "1"
    },
    "1401": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1402": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1403": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1404": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1406": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1407": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1408": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5AF"
    },
    "1411": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1412": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1413": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1414": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1415": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1416": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1417": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1419": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1420": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1422": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1424": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1425": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1426": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1427": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1428": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1429": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1430": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1431": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1432": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1434": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1435": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1436": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1438": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1439": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1440": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1441": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "GT",
      "path": "1"
    },
    "1442": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x592"
    },
    "1445": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1446": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1447": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1448": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SUB",
      "path": "1"
    },
    "1449": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "1451": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "AND",
      "path": "1"
    },
    "1452": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1453": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "ADD",
      "path": "1"
    },
    "1454": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1455": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1456": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1457": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1458": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1459": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1460": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1461": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1462": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "POP",
      "path": "1"
    },
    "1463": {
      "fn": "BitUser.blockOwner",
      "offset": [
        194,
        239
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1464": {
      "fn": "BitUser.blockOwner",
      "jump": "o",
      "offset": [
        194,
        239
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1465": {
      "op": "JUMPDEST"
    },
    "1466": {
      "op": "DUP3"
    },
    "1467": {
      "op": "DUP1"
    },
    "1468": {
      "op": "SLOAD"
    },
    "1469": {
      "op": "PUSH2",
      "value": "0x5C5"
    },
    "1472": {
      "op": "SWAP1"
    },
    "1473": {
      "op": "PUSH2",
      "value": "0x8F4"
    },
    "1476": {
      "jump": "i",
      "op": "JUMP"
    },
    "1477": {
      "op": "JUMPDEST"
    },
    "1478": {
      "op": "SWAP1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1481": {
      "op": "MSTORE"
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1486": {
      "op": "KECCAK256"
    },
    "1487": {
      "op": "SWAP1"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1490": {
      "op": "ADD"
    },
    "1491": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1493": {
      "op": "SWAP1"
    },
    "1494": {
      "op": "DIV"
    },
    "1495": {
      "op": "DUP2"
    },
    "1496": {
      "op": "ADD"
    },
    "1497": {
      "op": "SWAP3"
    },
    "1498": {
      "op": "DUP3"
    },
    "1499": {
      "op": "PUSH2",
      "value": "0x5E7"
    },
    "1502": {
      "op": "JUMPI"
    },
    "1503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1505": {
      "op": "DUP6"
    },
    "1506": {
      "op": "SSTORE"
    },
    "1507": {
      "op": "PUSH2",
      "value": "0x62D"
    },
    "1510": {
      "op": "JUMP"
    },
    "1511": {
      "op": "JUMPDEST"
    },
    "1512": {
      "op": "DUP3"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1515": {
      "op": "LT"
    },
    "1516": {
      "op": "PUSH2",
      "value": "0x600"
    },
    "1519": {
      "op": "JUMPI"
    },
    "1520": {
      "op": "DUP1"
    },
    "1521": {
      "op": "MLOAD"
    },
    "1522": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1524": {
      "op": "NOT"
    },
    "1525": {
      "op": "AND"
    },
    "1526": {
      "op": "DUP4"
    },
    "1527": {
      "op": "DUP1"
    },
    "1528": {
      "op": "ADD"
    },
    "1529": {
      "op": "OR"
    },
    "1530": {
      "op": "DUP6"
    },
    "1531": {
      "op": "SSTORE"
    },
    "1532": {
      "op": "PUSH2",
      "value": "0x62D"
    },
    "1535": {
      "op": "JUMP"
    },
    "1536": {
      "op": "JUMPDEST"
    },
    "1537": {
      "op": "DUP3"
    },
    "1538": {
      "op": "DUP1"
    },
    "1539": {
      "op": "ADD"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1542": {
      "op": "ADD"
    },
    "1543": {
      "op": "DUP6"
    },
    "1544": {
      "op": "SSTORE"
    },
    "1545": {
      "op": "DUP3"
    },
    "1546": {
      "op": "ISZERO"
    },
    "1547": {
      "op": "PUSH2",
      "value": "0x62D"
    },
    "1550": {
      "op": "JUMPI"
    },
    "1551": {
      "op": "SWAP2"
    },
    "1552": {
      "op": "DUP3"
    },
    "1553": {
      "op": "ADD"
    },
    "1554": {
      "op": "JUMPDEST"
    },
    "1555": {
      "op": "DUP3"
    },
    "1556": {
      "op": "DUP2"
    },
    "1557": {
      "op": "GT"
    },
    "1558": {
      "op": "ISZERO"
    },
    "1559": {
      "op": "PUSH2",
      "value": "0x62D"
    },
    "1562": {
      "op": "JUMPI"
    },
    "1563": {
      "op": "DUP3"
    },
    "1564": {
      "op": "MLOAD"
    },
    "1565": {
      "op": "DUP3"
    },
    "1566": {
      "op": "SSTORE"
    },
    "1567": {
      "op": "SWAP2"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1570": {
      "op": "ADD"
    },
    "1571": {
      "op": "SWAP2"
    },
    "1572": {
      "op": "SWAP1"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1575": {
      "op": "ADD"
    },
    "1576": {
      "op": "SWAP1"
    },
    "1577": {
      "op": "PUSH2",
      "value": "0x612"
    },
    "1580": {
      "op": "JUMP"
    },
    "1581": {
      "op": "JUMPDEST"
    },
    "1582": {
      "op": "POP"
    },
    "1583": {
      "op": "PUSH2",
      "value": "0x639"
    },
    "1586": {
      "op": "SWAP3"
    },
    "1587": {
      "op": "SWAP2"
    },
    "1588": {
      "op": "POP"
    },
    "1589": {
      "op": "PUSH2",
      "value": "0x63D"
    },
    "1592": {
      "jump": "i",
      "op": "JUMP"
    },
    "1593": {
      "op": "JUMPDEST"
    },
    "1594": {
      "op": "POP"
    },
    "1595": {
      "op": "SWAP1"
    },
    "1596": {
      "jump": "o",
      "op": "JUMP"
    },
    "1597": {
      "op": "JUMPDEST"
    },
    "1598": {
      "op": "JUMPDEST"
    },
    "1599": {
      "op": "DUP1"
    },
    "1600": {
      "op": "DUP3"
    },
    "1601": {
      "op": "GT"
    },
    "1602": {
      "op": "ISZERO"
    },
    "1603": {
      "op": "PUSH2",
      "value": "0x639"
    },
    "1606": {
      "op": "JUMPI"
    },
    "1607": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1609": {
      "op": "DUP2"
    },
    "1610": {
      "op": "SSTORE"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "ADD"
    },
    "1614": {
      "op": "PUSH2",
      "value": "0x63E"
    },
    "1617": {
      "op": "JUMP"
    },
    "1618": {
      "op": "JUMPDEST"
    },
    "1619": {
      "op": "DUP1"
    },
    "1620": {
      "op": "CALLDATALOAD"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1627": {
      "op": "SHL"
    },
    "1628": {
      "op": "SUB"
    },
    "1629": {
      "op": "DUP2"
    },
    "1630": {
      "op": "AND"
    },
    "1631": {
      "op": "DUP2"
    },
    "1632": {
      "op": "EQ"
    },
    "1633": {
      "op": "PUSH2",
      "value": "0x669"
    },
    "1636": {
      "op": "JUMPI"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1639": {
      "op": "DUP1"
    },
    "1640": {
      "op": "REVERT"
    },
    "1641": {
      "op": "JUMPDEST"
    },
    "1642": {
      "op": "SWAP2"
    },
    "1643": {
      "op": "SWAP1"
    },
    "1644": {
      "op": "POP"
    },
    "1645": {
      "jump": "o",
      "op": "JUMP"
    },
    "1646": {
      "op": "JUMPDEST"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1651": {
      "op": "DUP3"
    },
    "1652": {
      "op": "DUP5"
    },
    "1653": {
      "op": "SUB"
    },
    "1654": {
      "op": "SLT"
    },
    "1655": {
      "op": "ISZERO"
    },
    "1656": {
      "op": "PUSH2",
      "value": "0x680"
    },
    "1659": {
      "op": "JUMPI"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1662": {
      "op": "DUP1"
    },
    "1663": {
      "op": "REVERT"
    },
    "1664": {
      "op": "JUMPDEST"
    },
    "1665": {
      "op": "PUSH2",
      "value": "0x689"
    },
    "1668": {
      "op": "DUP3"
    },
    "1669": {
      "op": "PUSH2",
      "value": "0x652"
    },
    "1672": {
      "jump": "i",
      "op": "JUMP"
    },
    "1673": {
      "op": "JUMPDEST"
    },
    "1674": {
      "op": "SWAP4"
    },
    "1675": {
      "op": "SWAP3"
    },
    "1676": {
      "op": "POP"
    },
    "1677": {
      "op": "POP"
    },
    "1678": {
      "op": "POP"
    },
    "1679": {
      "jump": "o",
      "op": "JUMP"
    },
    "1680": {
      "op": "JUMPDEST"
    },
    "1681": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1686": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1688": {
      "op": "SHL"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1691": {
      "op": "MSTORE"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1694": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1696": {
      "op": "MSTORE"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1701": {
      "op": "REVERT"
    },
    "1702": {
      "op": "JUMPDEST"
    },
    "1703": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1705": {
      "op": "DUP3"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1708": {
      "op": "DUP4"
    },
    "1709": {
      "op": "ADD"
    },
    "1710": {
      "op": "SLT"
    },
    "1711": {
      "op": "PUSH2",
      "value": "0x6B7"
    },
    "1714": {
      "op": "JUMPI"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1717": {
      "op": "DUP1"
    },
    "1718": {
      "op": "REVERT"
    },
    "1719": {
      "op": "JUMPDEST"
    },
    "1720": {
      "op": "DUP2"
    },
    "1721": {
      "op": "CALLDATALOAD"
    },
    "1722": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1731": {
      "op": "DUP1"
    },
    "1732": {
      "op": "DUP3"
    },
    "1733": {
      "op": "GT"
    },
    "1734": {
      "op": "ISZERO"
    },
    "1735": {
      "op": "PUSH2",
      "value": "0x6D2"
    },
    "1738": {
      "op": "JUMPI"
    },
    "1739": {
      "op": "PUSH2",
      "value": "0x6D2"
    },
    "1742": {
      "op": "PUSH2",
      "value": "0x690"
    },
    "1745": {
      "jump": "i",
      "op": "JUMP"
    },
    "1746": {
      "op": "JUMPDEST"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1749": {
      "op": "MLOAD"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1752": {
      "op": "DUP4"
    },
    "1753": {
      "op": "ADD"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1756": {
      "op": "NOT"
    },
    "1757": {
      "op": "SWAP1"
    },
    "1758": {
      "op": "DUP2"
    },
    "1759": {
      "op": "AND"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1762": {
      "op": "ADD"
    },
    "1763": {
      "op": "AND"
    },
    "1764": {
      "op": "DUP2"
    },
    "1765": {
      "op": "ADD"
    },
    "1766": {
      "op": "SWAP1"
    },
    "1767": {
      "op": "DUP3"
    },
    "1768": {
      "op": "DUP3"
    },
    "1769": {
      "op": "GT"
    },
    "1770": {
      "op": "DUP2"
    },
    "1771": {
      "op": "DUP4"
    },
    "1772": {
      "op": "LT"
    },
    "1773": {
      "op": "OR"
    },
    "1774": {
      "op": "ISZERO"
    },
    "1775": {
      "op": "PUSH2",
      "value": "0x6FA"
    },
    "1778": {
      "op": "JUMPI"
    },
    "1779": {
      "op": "PUSH2",
      "value": "0x6FA"
    },
    "1782": {
      "op": "PUSH2",
      "value": "0x690"
    },
    "1785": {
      "jump": "i",
      "op": "JUMP"
    },
    "1786": {
      "op": "JUMPDEST"
    },
    "1787": {
      "op": "DUP2"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1790": {
      "op": "MSTORE"
    },
    "1791": {
      "op": "DUP4"
    },
    "1792": {
      "op": "DUP2"
    },
    "1793": {
      "op": "MSTORE"
    },
    "1794": {
      "op": "DUP7"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1797": {
      "op": "DUP6"
    },
    "1798": {
      "op": "DUP9"
    },
    "1799": {
      "op": "ADD"
    },
    "1800": {
      "op": "ADD"
    },
    "1801": {
      "op": "GT"
    },
    "1802": {
      "op": "ISZERO"
    },
    "1803": {
      "op": "PUSH2",
      "value": "0x713"
    },
    "1806": {
      "op": "JUMPI"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1809": {
      "op": "DUP1"
    },
    "1810": {
      "op": "REVERT"
    },
    "1811": {
      "op": "JUMPDEST"
    },
    "1812": {
      "op": "DUP4"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1815": {
      "op": "DUP8"
    },
    "1816": {
      "op": "ADD"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1819": {
      "op": "DUP4"
    },
    "1820": {
      "op": "ADD"
    },
    "1821": {
      "op": "CALLDATACOPY"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1826": {
      "op": "DUP6"
    },
    "1827": {
      "op": "DUP4"
    },
    "1828": {
      "op": "ADD"
    },
    "1829": {
      "op": "ADD"
    },
    "1830": {
      "op": "MSTORE"
    },
    "1831": {
      "op": "DUP1"
    },
    "1832": {
      "op": "SWAP5"
    },
    "1833": {
      "op": "POP"
    },
    "1834": {
      "op": "POP"
    },
    "1835": {
      "op": "POP"
    },
    "1836": {
      "op": "POP"
    },
    "1837": {
      "op": "POP"
    },
    "1838": {
      "op": "SWAP3"
    },
    "1839": {
      "op": "SWAP2"
    },
    "1840": {
      "op": "POP"
    },
    "1841": {
      "op": "POP"
    },
    "1842": {
      "jump": "o",
      "op": "JUMP"
    },
    "1843": {
      "op": "JUMPDEST"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1846": {
      "op": "DUP1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1849": {
      "op": "DUP1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1852": {
      "op": "DUP6"
    },
    "1853": {
      "op": "DUP8"
    },
    "1854": {
      "op": "SUB"
    },
    "1855": {
      "op": "SLT"
    },
    "1856": {
      "op": "ISZERO"
    },
    "1857": {
      "op": "PUSH2",
      "value": "0x749"
    },
    "1860": {
      "op": "JUMPI"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1863": {
      "op": "DUP1"
    },
    "1864": {
      "op": "REVERT"
    },
    "1865": {
      "op": "JUMPDEST"
    },
    "1866": {
      "op": "PUSH2",
      "value": "0x752"
    },
    "1869": {
      "op": "DUP6"
    },
    "1870": {
      "op": "PUSH2",
      "value": "0x652"
    },
    "1873": {
      "jump": "i",
      "op": "JUMP"
    },
    "1874": {
      "op": "JUMPDEST"
    },
    "1875": {
      "op": "SWAP4"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1879": {
      "op": "DUP6"
    },
    "1880": {
      "op": "ADD"
    },
    "1881": {
      "op": "CALLDATALOAD"
    },
    "1882": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1891": {
      "op": "DUP1"
    },
    "1892": {
      "op": "DUP3"
    },
    "1893": {
      "op": "GT"
    },
    "1894": {
      "op": "ISZERO"
    },
    "1895": {
      "op": "PUSH2",
      "value": "0x76F"
    },
    "1898": {
      "op": "JUMPI"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1901": {
      "op": "DUP1"
    },
    "1902": {
      "op": "REVERT"
    },
    "1903": {
      "op": "JUMPDEST"
    },
    "1904": {
      "op": "PUSH2",
      "value": "0x77B"
    },
    "1907": {
      "op": "DUP9"
    },
    "1908": {
      "op": "DUP4"
    },
    "1909": {
      "op": "DUP10"
    },
    "1910": {
      "op": "ADD"
    },
    "1911": {
      "op": "PUSH2",
      "value": "0x6A6"
    },
    "1914": {
      "jump": "i",
      "op": "JUMP"
    },
    "1915": {
      "op": "JUMPDEST"
    },
    "1916": {
      "op": "SWAP5"
    },
    "1917": {
      "op": "POP"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1920": {
      "op": "DUP8"
    },
    "1921": {
      "op": "ADD"
    },
    "1922": {
      "op": "CALLDATALOAD"
    },
    "1923": {
      "op": "SWAP2"
    },
    "1924": {
      "op": "POP"
    },
    "1925": {
      "op": "DUP1"
    },
    "1926": {
      "op": "DUP3"
    },
    "1927": {
      "op": "GT"
    },
    "1928": {
      "op": "ISZERO"
    },
    "1929": {
      "op": "PUSH2",
      "value": "0x791"
    },
    "1932": {
      "op": "JUMPI"
    },
    "1933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1935": {
      "op": "DUP1"
    },
    "1936": {
      "op": "REVERT"
    },
    "1937": {
      "op": "JUMPDEST"
    },
    "1938": {
      "op": "PUSH2",
      "value": "0x79D"
    },
    "1941": {
      "op": "DUP9"
    },
    "1942": {
      "op": "DUP4"
    },
    "1943": {
      "op": "DUP10"
    },
    "1944": {
      "op": "ADD"
    },
    "1945": {
      "op": "PUSH2",
      "value": "0x6A6"
    },
    "1948": {
      "jump": "i",
      "op": "JUMP"
    },
    "1949": {
      "op": "JUMPDEST"
    },
    "1950": {
      "op": "SWAP4"
    },
    "1951": {
      "op": "POP"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1954": {
      "op": "DUP8"
    },
    "1955": {
      "op": "ADD"
    },
    "1956": {
      "op": "CALLDATALOAD"
    },
    "1957": {
      "op": "SWAP2"
    },
    "1958": {
      "op": "POP"
    },
    "1959": {
      "op": "DUP1"
    },
    "1960": {
      "op": "DUP3"
    },
    "1961": {
      "op": "GT"
    },
    "1962": {
      "op": "ISZERO"
    },
    "1963": {
      "op": "PUSH2",
      "value": "0x7B3"
    },
    "1966": {
      "op": "JUMPI"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1969": {
      "op": "DUP1"
    },
    "1970": {
      "op": "REVERT"
    },
    "1971": {
      "op": "JUMPDEST"
    },
    "1972": {
      "op": "POP"
    },
    "1973": {
      "op": "PUSH2",
      "value": "0x7C0"
    },
    "1976": {
      "op": "DUP8"
    },
    "1977": {
      "op": "DUP3"
    },
    "1978": {
      "op": "DUP9"
    },
    "1979": {
      "op": "ADD"
    },
    "1980": {
      "op": "PUSH2",
      "value": "0x6A6"
    },
    "1983": {
      "jump": "i",
      "op": "JUMP"
    },
    "1984": {
      "op": "JUMPDEST"
    },
    "1985": {
      "op": "SWAP2"
    },
    "1986": {
      "op": "POP"
    },
    "1987": {
      "op": "POP"
    },
    "1988": {
      "op": "SWAP3"
    },
    "1989": {
      "op": "SWAP6"
    },
    "1990": {
      "op": "SWAP2"
    },
    "1991": {
      "op": "SWAP5"
    },
    "1992": {
      "op": "POP"
    },
    "1993": {
      "op": "SWAP3"
    },
    "1994": {
      "op": "POP"
    },
    "1995": {
      "jump": "o",
      "op": "JUMP"
    },
    "1996": {
      "op": "JUMPDEST"
    },
    "1997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1999": {
      "op": "DUP2"
    },
    "2000": {
      "op": "MLOAD"
    },
    "2001": {
      "op": "DUP1"
    },
    "2002": {
      "op": "DUP5"
    },
    "2003": {
      "op": "MSTORE"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2006": {
      "op": "JUMPDEST"
    },
    "2007": {
      "op": "DUP2"
    },
    "2008": {
      "op": "DUP2"
    },
    "2009": {
      "op": "LT"
    },
    "2010": {
      "op": "ISZERO"
    },
    "2011": {
      "op": "PUSH2",
      "value": "0x7F2"
    },
    "2014": {
      "op": "JUMPI"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2017": {
      "op": "DUP2"
    },
    "2018": {
      "op": "DUP6"
    },
    "2019": {
      "op": "ADD"
    },
    "2020": {
      "op": "DUP2"
    },
    "2021": {
      "op": "ADD"
    },
    "2022": {
      "op": "MLOAD"
    },
    "2023": {
      "op": "DUP7"
    },
    "2024": {
      "op": "DUP4"
    },
    "2025": {
      "op": "ADD"
    },
    "2026": {
      "op": "DUP3"
    },
    "2027": {
      "op": "ADD"
    },
    "2028": {
      "op": "MSTORE"
    },
    "2029": {
      "op": "ADD"
    },
    "2030": {
      "op": "PUSH2",
      "value": "0x7D6"
    },
    "2033": {
      "op": "JUMP"
    },
    "2034": {
      "op": "JUMPDEST"
    },
    "2035": {
      "op": "DUP2"
    },
    "2036": {
      "op": "DUP2"
    },
    "2037": {
      "op": "GT"
    },
    "2038": {
      "op": "ISZERO"
    },
    "2039": {
      "op": "PUSH2",
      "value": "0x804"
    },
    "2042": {
      "op": "JUMPI"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2047": {
      "op": "DUP4"
    },
    "2048": {
      "op": "DUP8"
    },
    "2049": {
      "op": "ADD"
    },
    "2050": {
      "op": "ADD"
    },
    "2051": {
      "op": "MSTORE"
    },
    "2052": {
      "op": "JUMPDEST"
    },
    "2053": {
      "op": "POP"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2056": {
      "op": "ADD"
    },
    "2057": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2059": {
      "op": "NOT"
    },
    "2060": {
      "op": "AND"
    },
    "2061": {
      "op": "SWAP3"
    },
    "2062": {
      "op": "SWAP1"
    },
    "2063": {
      "op": "SWAP3"
    },
    "2064": {
      "op": "ADD"
    },
    "2065": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2067": {
      "op": "ADD"
    },
    "2068": {
      "op": "SWAP3"
    },
    "2069": {
      "op": "SWAP2"
    },
    "2070": {
      "op": "POP"
    },
    "2071": {
      "op": "POP"
    },
    "2072": {
      "jump": "o",
      "op": "JUMP"
    },
    "2073": {
      "op": "JUMPDEST"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2076": {
      "op": "DUP2"
    },
    "2077": {
      "op": "MSTORE"
    },
    "2078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2080": {
      "op": "PUSH2",
      "value": "0x82C"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2085": {
      "op": "DUP4"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "op": "DUP7"
    },
    "2088": {
      "op": "PUSH2",
      "value": "0x7CC"
    },
    "2091": {
      "jump": "i",
      "op": "JUMP"
    },
    "2092": {
      "op": "JUMPDEST"
    },
    "2093": {
      "op": "DUP3"
    },
    "2094": {
      "op": "DUP2"
    },
    "2095": {
      "op": "SUB"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2098": {
      "op": "DUP5"
    },
    "2099": {
      "op": "ADD"
    },
    "2100": {
      "op": "MSTORE"
    },
    "2101": {
      "op": "PUSH2",
      "value": "0x83E"
    },
    "2104": {
      "op": "DUP2"
    },
    "2105": {
      "op": "DUP7"
    },
    "2106": {
      "op": "PUSH2",
      "value": "0x7CC"
    },
    "2109": {
      "jump": "i",
      "op": "JUMP"
    },
    "2110": {
      "op": "JUMPDEST"
    },
    "2111": {
      "op": "SWAP1"
    },
    "2112": {
      "op": "POP"
    },
    "2113": {
      "op": "DUP3"
    },
    "2114": {
      "op": "DUP2"
    },
    "2115": {
      "op": "SUB"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2118": {
      "op": "DUP5"
    },
    "2119": {
      "op": "ADD"
    },
    "2120": {
      "op": "MSTORE"
    },
    "2121": {
      "op": "PUSH2",
      "value": "0x852"
    },
    "2124": {
      "op": "DUP2"
    },
    "2125": {
      "op": "DUP6"
    },
    "2126": {
      "op": "PUSH2",
      "value": "0x7CC"
    },
    "2129": {
      "jump": "i",
      "op": "JUMP"
    },
    "2130": {
      "op": "JUMPDEST"
    },
    "2131": {
      "op": "SWAP7"
    },
    "2132": {
      "op": "SWAP6"
    },
    "2133": {
      "op": "POP"
    },
    "2134": {
      "op": "POP"
    },
    "2135": {
      "op": "POP"
    },
    "2136": {
      "op": "POP"
    },
    "2137": {
      "op": "POP"
    },
    "2138": {
      "op": "POP"
    },
    "2139": {
      "jump": "o",
      "op": "JUMP"
    },
    "2140": {
      "op": "JUMPDEST"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2143": {
      "op": "DUP1"
    },
    "2144": {
      "op": "DUP3"
    },
    "2145": {
      "op": "MSTORE"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2148": {
      "op": "SWAP1"
    },
    "2149": {
      "op": "DUP3"
    },
    "2150": {
      "op": "ADD"
    },
    "2151": {
      "op": "MSTORE"
    },
    "2152": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2187": {
      "op": "DUP3"
    },
    "2188": {
      "op": "ADD"
    },
    "2189": {
      "op": "MSTORE"
    },
    "2190": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "2195": {
      "op": "SHL"
    },
    "2196": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2198": {
      "op": "DUP3"
    },
    "2199": {
      "op": "ADD"
    },
    "2200": {
      "op": "MSTORE"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2203": {
      "op": "ADD"
    },
    "2204": {
      "op": "SWAP1"
    },
    "2205": {
      "jump": "o",
      "op": "JUMP"
    },
    "2206": {
      "op": "JUMPDEST"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2209": {
      "op": "DUP1"
    },
    "2210": {
      "op": "DUP3"
    },
    "2211": {
      "op": "MSTORE"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x16"
    },
    "2214": {
      "op": "SWAP1"
    },
    "2215": {
      "op": "DUP3"
    },
    "2216": {
      "op": "ADD"
    },
    "2217": {
      "op": "MSTORE"
    },
    "2218": {
      "op": "PUSH22",
      "value": "0x2CB7BA903430BB32903132B2B710313637B1B5B2B217"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0x51"
    },
    "2243": {
      "op": "SHL"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2246": {
      "op": "DUP3"
    },
    "2247": {
      "op": "ADD"
    },
    "2248": {
      "op": "MSTORE"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2251": {
      "op": "ADD"
    },
    "2252": {
      "op": "SWAP1"
    },
    "2253": {
      "jump": "o",
      "op": "JUMP"
    },
    "2254": {
      "op": "JUMPDEST"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2257": {
      "op": "DUP3"
    },
    "2258": {
      "op": "NOT"
    },
    "2259": {
      "op": "DUP3"
    },
    "2260": {
      "op": "GT"
    },
    "2261": {
      "op": "ISZERO"
    },
    "2262": {
      "op": "PUSH2",
      "value": "0x8EF"
    },
    "2265": {
      "op": "JUMPI"
    },
    "2266": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2273": {
      "op": "SHL"
    },
    "2274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2276": {
      "op": "MSTORE"
    },
    "2277": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2281": {
      "op": "MSTORE"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2284": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2286": {
      "op": "REVERT"
    },
    "2287": {
      "op": "JUMPDEST"
    },
    "2288": {
      "op": "POP"
    },
    "2289": {
      "op": "ADD"
    },
    "2290": {
      "op": "SWAP1"
    },
    "2291": {
      "jump": "o",
      "op": "JUMP"
    },
    "2292": {
      "op": "JUMPDEST"
    },
    "2293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2295": {
      "op": "DUP2"
    },
    "2296": {
      "op": "DUP2"
    },
    "2297": {
      "op": "SHR"
    },
    "2298": {
      "op": "SWAP1"
    },
    "2299": {
      "op": "DUP3"
    },
    "2300": {
      "op": "AND"
    },
    "2301": {
      "op": "DUP1"
    },
    "2302": {
      "op": "PUSH2",
      "value": "0x908"
    },
    "2305": {
      "op": "JUMPI"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2308": {
      "op": "DUP3"
    },
    "2309": {
      "op": "AND"
    },
    "2310": {
      "op": "SWAP2"
    },
    "2311": {
      "op": "POP"
    },
    "2312": {
      "op": "JUMPDEST"
    },
    "2313": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2315": {
      "op": "DUP3"
    },
    "2316": {
      "op": "LT"
    },
    "2317": {
      "op": "DUP2"
    },
    "2318": {
      "op": "SUB"
    },
    "2319": {
      "op": "PUSH2",
      "value": "0x928"
    },
    "2322": {
      "op": "JUMPI"
    },
    "2323": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2330": {
      "op": "SHL"
    },
    "2331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2333": {
      "op": "MSTORE"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2336": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2338": {
      "op": "MSTORE"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2343": {
      "op": "REVERT"
    },
    "2344": {
      "op": "JUMPDEST"
    },
    "2345": {
      "op": "POP"
    },
    "2346": {
      "op": "SWAP2"
    },
    "2347": {
      "op": "SWAP1"
    },
    "2348": {
      "op": "POP"
    },
    "2349": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "7ce26898fc19e9e72f8a0b8b54ed4d87a63885b1",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.14;\n\ncontract BitUser {\n    struct User {\n        string username;\n        string userDescription;\n        string userprofilepic;\n    }\n\n    mapping(address => User) public addressToUser;\n\n    uint256 public ownerCount;\n    mapping(address => uint256) public ownerToOwnerId;\n    uint256 public blockedOwnerCount;\n    mapping(address => uint256) public blockedOwnerToOwnerId;\n\n    constructor() {\n        blockedOwnerCount = 0;\n        ownerCount = 1;\n        ownerToOwnerId[msg.sender] = ownerCount;\n    }\n\n    modifier onlyOwner() {\n        require(\n            ownerToOwnerId[msg.sender] > 0,\n            \"Only owner can call this function.\"\n        );\n        require(\n            blockedOwnerToOwnerId[msg.sender] == 0,\n            \"You have been blocked.\"\n        );\n        _;\n    }\n\n    function setOwner(address _newOwner) public onlyOwner {\n        require(ownerToOwnerId[_newOwner] == 0, \"Owner already added.\");\n        ownerCount = ownerCount + 1;\n        ownerToOwnerId[_newOwner] = ownerCount;\n    }\n\n    function blockOwner(address _owner) external onlyOwner {\n        require(msg.sender != _owner, \"You cannot block yourself\");\n        blockedOwnerCount = blockedOwnerCount + 1;\n        blockedOwnerToOwnerId[_owner] = blockedOwnerCount;\n    }\n\n    function addUser(\n        address _userAddress,\n        string memory _userName,\n        string memory _userDescription,\n        string memory _profilepic\n    ) public onlyOwner {\n        addressToUser[_userAddress].username = _userName;\n        addressToUser[_userAddress].userDescription = _userDescription;\n        addressToUser[_userAddress].userprofilepic = _profilepic;\n    }\n}\n",
  "sourceMap": "58:1643:1:-:0;;;433:125;;;;;;;;;-1:-1:-1;477:1:1;457:17;:21;;;501:1;488:14;;;527:10;512:26;;-1:-1:-1;512:26:1;;;;;;:39;58:1643;;;;;;",
  "sourcePath": "contracts/web3clubcontracts/contracts/login.sol",
  "type": "contract"
}